{"ast":null,"code":"import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToPromise } from '../util/subscribeToPromise';\nexport function fromPromise(input, scheduler) {\n  if (!scheduler) {\n    return new Observable(subscribeToPromise(input));\n  } else {\n    return new Observable(function (subscriber) {\n      var sub = new Subscription();\n      sub.add(scheduler.schedule(function () {\n        return input.then(function (value) {\n          sub.add(scheduler.schedule(function () {\n            subscriber.next(value);\n            sub.add(scheduler.schedule(function () {\n              return subscriber.complete();\n            }));\n          }));\n        }, function (err) {\n          sub.add(scheduler.schedule(function () {\n            return subscriber.error(err);\n          }));\n        });\n      }));\n      return sub;\n    });\n  }\n} //# sourceMappingURL=fromPromise.js.map","map":{"version":3,"sources":["C:/Users/beetechnica-1/hamza/_zeitlaeufte-react-admin-t/node_modules/angular-datatables/node_modules/rxjs/_esm2015/internal/observable/fromPromise.js"],"names":["Observable","Subscription","subscribeToPromise","fromPromise","input","scheduler","subscriber","sub","add","schedule","then","value","next","complete","err","error"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AACA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,SAA5B,EAAuC;AAC1C,MAAI,CAACA,SAAL,EAAgB;AACZ,WAAO,IAAIL,UAAJ,CAAeE,kBAAkB,CAACE,KAAD,CAAjC,CAAP;AACH,GAFD,MAGK;AACD,WAAO,IAAIJ,UAAJ,CAAe,UAAAM,UAAU,EAAI;AAChC,UAAMC,GAAG,GAAG,IAAIN,YAAJ,EAAZ;AACAM,MAAAA,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB;AAAA,eAAML,KAAK,CAACM,IAAN,CAAW,UAAAC,KAAK,EAAI;AACjDJ,UAAAA,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB,YAAM;AAC7BH,YAAAA,UAAU,CAACM,IAAX,CAAgBD,KAAhB;AACAJ,YAAAA,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB;AAAA,qBAAMH,UAAU,CAACO,QAAX,EAAN;AAAA,aAAnB,CAAR;AACH,WAHO,CAAR;AAIH,SALgC,EAK9B,UAAAC,GAAG,EAAI;AACNP,UAAAA,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB;AAAA,mBAAMH,UAAU,CAACS,KAAX,CAAiBD,GAAjB,CAAN;AAAA,WAAnB,CAAR;AACH,SAPgC,CAAN;AAAA,OAAnB,CAAR;AAQA,aAAOP,GAAP;AACH,KAXM,CAAP;AAYH;AACJ,C,CACD","sourcesContent":["import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToPromise } from '../util/subscribeToPromise';\nexport function fromPromise(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToPromise(input));\n    }\n    else {\n        return new Observable(subscriber => {\n            const sub = new Subscription();\n            sub.add(scheduler.schedule(() => input.then(value => {\n                sub.add(scheduler.schedule(() => {\n                    subscriber.next(value);\n                    sub.add(scheduler.schedule(() => subscriber.complete()));\n                }));\n            }, err => {\n                sub.add(scheduler.schedule(() => subscriber.error(err)));\n            })));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromPromise.js.map"]},"metadata":{},"sourceType":"module"}