{"ast":null,"code":"import firebase from '@firebase/app';\nimport { __spread, __awaiter, __generator, __extends, __assign } from 'tslib';\nimport { ErrorFactory, createSubscribe } from '@firebase/util';\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar _a;\n\nvar ERROR_MAP = (_a = {}, _a[\"only-available-in-window\"\n/* AVAILABLE_IN_WINDOW */\n] = 'This method is available in a Window context.', _a[\"only-available-in-sw\"\n/* AVAILABLE_IN_SW */\n] = 'This method is available in a service worker context.', _a[\"should-be-overriden\"\n/* SHOULD_BE_INHERITED */\n] = 'This method should be overriden by extended classes.', _a[\"bad-sender-id\"\n/* BAD_SENDER_ID */\n] = \"Please ensure that 'messagingSenderId' is set \" + 'correctly in the options passed into firebase.initializeApp().', _a[\"permission-default\"\n/* PERMISSION_DEFAULT */\n] = 'The required permissions were not granted and dismissed instead.', _a[\"permission-blocked\"\n/* PERMISSION_BLOCKED */\n] = 'The required permissions were not granted and blocked instead.', _a[\"unsupported-browser\"\n/* UNSUPPORTED_BROWSER */\n] = \"This browser doesn't support the API's \" + 'required to use the firebase SDK.', _a[\"notifications-blocked\"\n/* NOTIFICATIONS_BLOCKED */\n] = 'Notifications have been blocked.', _a[\"failed-serviceworker-registration\"\n/* FAILED_DEFAULT_REGISTRATION */\n] = 'We are unable to register the ' + 'default service worker. {$browserErrorMessage}', _a[\"sw-registration-expected\"\n/* SW_REGISTRATION_EXPECTED */\n] = 'A service worker registration was the expected input.', _a[\"get-subscription-failed\"\n/* GET_SUBSCRIPTION_FAILED */\n] = 'There was an error when trying to get ' + 'any existing Push Subscriptions.', _a[\"invalid-saved-token\"\n/* INVALID_SAVED_TOKEN */\n] = 'Unable to access details of the saved token.', _a[\"sw-reg-redundant\"\n/* SW_REG_REDUNDANT */\n] = 'The service worker being used for push was made redundant.', _a[\"token-subscribe-failed\"\n/* TOKEN_SUBSCRIBE_FAILED */\n] = 'A problem occured while subscribing the user to FCM: {$errorInfo}', _a[\"token-subscribe-no-token\"\n/* TOKEN_SUBSCRIBE_NO_TOKEN */\n] = 'FCM returned no token when subscribing the user to push.', _a[\"token-subscribe-no-push-set\"\n/* TOKEN_SUBSCRIBE_NO_PUSH_SET */\n] = 'FCM returned an invalid response when getting an FCM token.', _a[\"token-unsubscribe-failed\"\n/* TOKEN_UNSUBSCRIBE_FAILED */\n] = 'A problem occured while unsubscribing the ' + 'user from FCM: {$errorInfo}', _a[\"token-update-failed\"\n/* TOKEN_UPDATE_FAILED */\n] = 'A problem occured while updating the user from FCM: {$errorInfo}', _a[\"token-update-no-token\"\n/* TOKEN_UPDATE_NO_TOKEN */\n] = 'FCM returned no token when updating the user to push.', _a[\"use-sw-before-get-token\"\n/* USE_SW_BEFORE_GET_TOKEN */\n] = 'The useServiceWorker() method may only be called once and must be ' + 'called before calling getToken() to ensure your service worker is used.', _a[\"invalid-delete-token\"\n/* INVALID_DELETE_TOKEN */\n] = 'You must pass a valid token into ' + 'deleteToken(), i.e. the token from getToken().', _a[\"delete-token-not-found\"\n/* DELETE_TOKEN_NOT_FOUND */\n] = 'The deletion attempt for token could not ' + 'be performed as the token was not found.', _a[\"delete-scope-not-found\"\n/* DELETE_SCOPE_NOT_FOUND */\n] = 'The deletion attempt for service worker ' + 'scope could not be performed as the scope was not found.', _a[\"bg-handler-function-expected\"\n/* BG_HANDLER_FUNCTION_EXPECTED */\n] = 'The input to setBackgroundMessageHandler() must be a function.', _a[\"no-window-client-to-msg\"\n/* NO_WINDOW_CLIENT_TO_MSG */\n] = 'An attempt was made to message a non-existant window client.', _a[\"unable-to-resubscribe\"\n/* UNABLE_TO_RESUBSCRIBE */\n] = 'There was an error while re-subscribing ' + 'the FCM token for push messaging. Will have to resubscribe the ' + 'user on next visit. {$errorInfo}', _a[\"no-fcm-token-for-resubscribe\"\n/* NO_FCM_TOKEN_FOR_RESUBSCRIBE */\n] = 'Could not find an FCM token ' + 'and as a result, unable to resubscribe. Will have to resubscribe the ' + 'user on next visit.', _a[\"failed-to-delete-token\"\n/* FAILED_TO_DELETE_TOKEN */\n] = 'Unable to delete the currently saved token.', _a[\"no-sw-in-reg\"\n/* NO_SW_IN_REG */\n] = 'Even though the service worker registration was ' + 'successful, there was a problem accessing the service worker itself.', _a[\"bad-scope\"\n/* BAD_SCOPE */\n] = 'The service worker scope must be a string with at ' + 'least one character.', _a[\"bad-vapid-key\"\n/* BAD_VAPID_KEY */\n] = 'The public VAPID key is not a Uint8Array with 65 bytes.', _a[\"bad-subscription\"\n/* BAD_SUBSCRIPTION */\n] = 'The subscription must be a valid PushSubscription.', _a[\"bad-token\"\n/* BAD_TOKEN */\n] = 'The FCM Token used for storage / lookup was not ' + 'a valid token string.', _a[\"bad-push-set\"\n/* BAD_PUSH_SET */\n] = 'The FCM push set used for storage / lookup was not ' + 'not a valid push set string.', _a[\"failed-delete-vapid-key\"\n/* FAILED_DELETE_VAPID_KEY */\n] = 'The VAPID key could not be deleted.', _a[\"invalid-public-vapid-key\"\n/* INVALID_PUBLIC_VAPID_KEY */\n] = 'The public VAPID key must be a string.', _a[\"use-public-key-before-get-token\"\n/* USE_PUBLIC_KEY_BEFORE_GET_TOKEN */\n] = 'The usePublicVapidKey() method may only be called once and must be ' + 'called before calling getToken() to ensure your VAPID key is used.', _a[\"public-vapid-key-decryption-failed\"\n/* PUBLIC_KEY_DECRYPTION_FAILED */\n] = 'The public VAPID key did not equal 65 bytes when decrypted.', _a);\nvar errorFactory = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DEFAULT_PUBLIC_VAPID_KEY = new Uint8Array([0x04, 0x33, 0x94, 0xf7, 0xdf, 0xa1, 0xeb, 0xb1, 0xdc, 0x03, 0xa2, 0x5e, 0x15, 0x71, 0xdb, 0x48, 0xd3, 0x2e, 0xed, 0xed, 0xb2, 0x34, 0xdb, 0xb7, 0x47, 0x3a, 0x0c, 0x8f, 0xc4, 0xcc, 0xe1, 0x6f, 0x3c, 0x8c, 0x84, 0xdf, 0xab, 0xb6, 0x66, 0x3e, 0xf2, 0x0c, 0xd4, 0x8b, 0xfe, 0xe3, 0xf9, 0x76, 0x2f, 0x14, 0x1c, 0x63, 0x08, 0x6a, 0x6f, 0x2d, 0xb1, 0x1a, 0x95, 0xb0, 0xce, 0x37, 0xc0, 0x9c, 0x6e]);\nvar ENDPOINT = 'https://fcm.googleapis.com';\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar MessageParameter;\n\n(function (MessageParameter) {\n  MessageParameter[\"TYPE_OF_MSG\"] = \"firebase-messaging-msg-type\";\n  MessageParameter[\"DATA\"] = \"firebase-messaging-msg-data\";\n})(MessageParameter || (MessageParameter = {}));\n\nvar MessageType;\n\n(function (MessageType) {\n  MessageType[\"PUSH_MSG_RECEIVED\"] = \"push-msg-received\";\n  MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\n})(MessageType || (MessageType = {}));\n/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isArrayBufferEqual(a, b) {\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (a === b) {\n    return true;\n  }\n\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  var viewA = new DataView(a);\n  var viewB = new DataView(b);\n\n  for (var i = 0; i < a.byteLength; i++) {\n    if (viewA.getUint8(i) !== viewB.getUint8(i)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction toBase64(arrayBuffer) {\n  var uint8Version = new Uint8Array(arrayBuffer);\n  return btoa(String.fromCharCode.apply(String, __spread(uint8Version)));\n}\n\nfunction arrayBufferToBase64(arrayBuffer) {\n  var base64String = toBase64(arrayBuffer);\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar IidModel =\n/** @class */\nfunction () {\n  function IidModel() {}\n\n  IidModel.prototype.getToken = function (senderId, subscription, publicVapidKey) {\n    return __awaiter(this, void 0, void 0, function () {\n      var p256dh, auth, fcmSubscribeBody, applicationPubKey, headers, subscribeOptions, responseData, response, err_1, message;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            p256dh = arrayBufferToBase64(subscription.getKey('p256dh'));\n            auth = arrayBufferToBase64(subscription.getKey('auth'));\n            fcmSubscribeBody = \"authorized_entity=\" + senderId + \"&\" + (\"endpoint=\" + subscription.endpoint + \"&\") + (\"encryption_key=\" + p256dh + \"&\") + (\"encryption_auth=\" + auth);\n\n            if (!isArrayBufferEqual(publicVapidKey.buffer, DEFAULT_PUBLIC_VAPID_KEY.buffer)) {\n              applicationPubKey = arrayBufferToBase64(publicVapidKey);\n              fcmSubscribeBody += \"&application_pub_key=\" + applicationPubKey;\n            }\n\n            headers = new Headers();\n            headers.append('Content-Type', 'application/x-www-form-urlencoded');\n            subscribeOptions = {\n              method: 'POST',\n              headers: headers,\n              body: fcmSubscribeBody\n            };\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , fetch(ENDPOINT + '/fcm/connect/subscribe', subscribeOptions)];\n\n          case 2:\n            response = _a.sent();\n            return [4\n            /*yield*/\n            , response.json()];\n\n          case 3:\n            responseData = _a.sent();\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            err_1 = _a.sent();\n            throw errorFactory.create(\"token-subscribe-failed\"\n            /* TOKEN_SUBSCRIBE_FAILED */\n            , {\n              errorInfo: err_1\n            });\n\n          case 5:\n            if (responseData.error) {\n              message = responseData.error.message;\n              throw errorFactory.create(\"token-subscribe-failed\"\n              /* TOKEN_SUBSCRIBE_FAILED */\n              , {\n                errorInfo: message\n              });\n            }\n\n            if (!responseData.token) {\n              throw errorFactory.create(\"token-subscribe-no-token\"\n              /* TOKEN_SUBSCRIBE_NO_TOKEN */\n              );\n            }\n\n            if (!responseData.pushSet) {\n              throw errorFactory.create(\"token-subscribe-no-push-set\"\n              /* TOKEN_SUBSCRIBE_NO_PUSH_SET */\n              );\n            }\n\n            return [2\n            /*return*/\n            , {\n              token: responseData.token,\n              pushSet: responseData.pushSet\n            }];\n        }\n      });\n    });\n  };\n  /**\r\n   * Update the underlying token details for fcmToken.\r\n   */\n\n\n  IidModel.prototype.updateToken = function (senderId, fcmToken, fcmPushSet, subscription, publicVapidKey) {\n    return __awaiter(this, void 0, void 0, function () {\n      var p256dh, auth, fcmUpdateBody, applicationPubKey, headers, updateOptions, responseData, response, err_2, message;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            p256dh = arrayBufferToBase64(subscription.getKey('p256dh'));\n            auth = arrayBufferToBase64(subscription.getKey('auth'));\n            fcmUpdateBody = \"push_set=\" + fcmPushSet + \"&\" + (\"token=\" + fcmToken + \"&\") + (\"authorized_entity=\" + senderId + \"&\") + (\"endpoint=\" + subscription.endpoint + \"&\") + (\"encryption_key=\" + p256dh + \"&\") + (\"encryption_auth=\" + auth);\n\n            if (!isArrayBufferEqual(publicVapidKey.buffer, DEFAULT_PUBLIC_VAPID_KEY.buffer)) {\n              applicationPubKey = arrayBufferToBase64(publicVapidKey);\n              fcmUpdateBody += \"&application_pub_key=\" + applicationPubKey;\n            }\n\n            headers = new Headers();\n            headers.append('Content-Type', 'application/x-www-form-urlencoded');\n            updateOptions = {\n              method: 'POST',\n              headers: headers,\n              body: fcmUpdateBody\n            };\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , fetch(ENDPOINT + '/fcm/connect/subscribe', updateOptions)];\n\n          case 2:\n            response = _a.sent();\n            return [4\n            /*yield*/\n            , response.json()];\n\n          case 3:\n            responseData = _a.sent();\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            err_2 = _a.sent();\n            throw errorFactory.create(\"token-update-failed\"\n            /* TOKEN_UPDATE_FAILED */\n            , {\n              errorInfo: err_2\n            });\n\n          case 5:\n            if (responseData.error) {\n              message = responseData.error.message;\n              throw errorFactory.create(\"token-update-failed\"\n              /* TOKEN_UPDATE_FAILED */\n              , {\n                errorInfo: message\n              });\n            }\n\n            if (!responseData.token) {\n              throw errorFactory.create(\"token-update-no-token\"\n              /* TOKEN_UPDATE_NO_TOKEN */\n              );\n            }\n\n            return [2\n            /*return*/\n            , responseData.token];\n        }\n      });\n    });\n  };\n  /**\r\n   * Given a fcmToken, pushSet and messagingSenderId, delete an FCM token.\r\n   */\n\n\n  IidModel.prototype.deleteToken = function (senderId, fcmToken, fcmPushSet) {\n    return __awaiter(this, void 0, void 0, function () {\n      var fcmUnsubscribeBody, headers, unsubscribeOptions, response, responseData, message, err_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            fcmUnsubscribeBody = \"authorized_entity=\" + senderId + \"&\" + (\"token=\" + fcmToken + \"&\") + (\"pushSet=\" + fcmPushSet);\n            headers = new Headers();\n            headers.append('Content-Type', 'application/x-www-form-urlencoded');\n            unsubscribeOptions = {\n              method: 'POST',\n              headers: headers,\n              body: fcmUnsubscribeBody\n            };\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , fetch(ENDPOINT + '/fcm/connect/unsubscribe', unsubscribeOptions)];\n\n          case 2:\n            response = _a.sent();\n            return [4\n            /*yield*/\n            , response.json()];\n\n          case 3:\n            responseData = _a.sent();\n\n            if (responseData.error) {\n              message = responseData.error.message;\n              throw errorFactory.create(\"token-unsubscribe-failed\"\n              /* TOKEN_UNSUBSCRIBE_FAILED */\n              , {\n                errorInfo: message\n              });\n            }\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            err_3 = _a.sent();\n            throw errorFactory.create(\"token-unsubscribe-failed\"\n            /* TOKEN_UNSUBSCRIBE_FAILED */\n            , {\n              errorInfo: err_3\n            });\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return IidModel;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction base64ToArrayBuffer(base64String) {\n  var padding = '='.repeat((4 - base64String.length % 4) % 4);\n  var base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n  var rawData = atob(base64);\n  var outputArray = new Uint8Array(rawData.length);\n\n  for (var i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar OLD_DB_NAME = 'undefined';\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nfunction handleDb(db) {\n  if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n    // We found a database with the name 'undefined', but our expected object\n    // store isn't defined.\n    return;\n  }\n\n  var transaction = db.transaction(OLD_OBJECT_STORE_NAME);\n  var objectStore = transaction.objectStore(OLD_OBJECT_STORE_NAME);\n  var iidModel = new IidModel();\n  var openCursorRequest = objectStore.openCursor();\n\n  openCursorRequest.onerror = function (event) {\n    // NOOP - Nothing we can do.\n    console.warn('Unable to cleanup old IDB.', event);\n  };\n\n  openCursorRequest.onsuccess = function () {\n    var cursor = openCursorRequest.result;\n\n    if (cursor) {\n      // cursor.value contains the current record being iterated through\n      // this is where you'd do something with the result\n      var tokenDetails = cursor.value; // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n      iidModel.deleteToken(tokenDetails.fcmSenderId, tokenDetails.fcmToken, tokenDetails.fcmPushSet);\n      cursor.continue();\n    } else {\n      db.close();\n      indexedDB.deleteDatabase(OLD_DB_NAME);\n    }\n  };\n}\n\nfunction cleanV1() {\n  var request = indexedDB.open(OLD_DB_NAME);\n\n  request.onerror = function (_event) {// NOOP - Nothing we can do.\n  };\n\n  request.onsuccess = function (_event) {\n    var db = request.result;\n    handleDb(db);\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DbInterface =\n/** @class */\nfunction () {\n  function DbInterface() {\n    this.dbPromise = null;\n  }\n  /** Gets record(s) from the objectStore that match the given key. */\n\n\n  DbInterface.prototype.get = function (key) {\n    return this.createTransaction(function (objectStore) {\n      return objectStore.get(key);\n    });\n  };\n  /** Gets record(s) from the objectStore that match the given index. */\n\n\n  DbInterface.prototype.getIndex = function (index, key) {\n    function runRequest(objectStore) {\n      var idbIndex = objectStore.index(index);\n      return idbIndex.get(key);\n    }\n\n    return this.createTransaction(runRequest);\n  };\n  /** Assigns or overwrites the record for the given value. */\n  // IndexedDB values are of type \"any\"\n\n\n  DbInterface.prototype.put = function (value) {\n    return this.createTransaction(function (objectStore) {\n      return objectStore.put(value);\n    }, 'readwrite');\n  };\n  /** Deletes record(s) from the objectStore that match the given key. */\n\n\n  DbInterface.prototype.delete = function (key) {\n    return this.createTransaction(function (objectStore) {\n      return objectStore.delete(key);\n    }, 'readwrite');\n  };\n  /**\r\n   * Close the currently open database.\r\n   */\n\n\n  DbInterface.prototype.closeDatabase = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var db;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.dbPromise) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.dbPromise];\n\n          case 1:\n            db = _a.sent();\n            db.close();\n            this.dbPromise = null;\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Creates an IndexedDB Transaction and passes its objectStore to the\r\n   * runRequest function, which runs the database request.\r\n   *\r\n   * @return Promise that resolves with the result of the runRequest function\r\n   */\n\n\n  DbInterface.prototype.createTransaction = function (runRequest, mode) {\n    if (mode === void 0) {\n      mode = 'readonly';\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var db, transaction, request, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getDb()];\n\n          case 1:\n            db = _a.sent();\n            transaction = db.transaction(this.objectStoreName, mode);\n            request = transaction.objectStore(this.objectStoreName);\n            return [4\n            /*yield*/\n            , promisify(runRequest(request))];\n\n          case 2:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , new Promise(function (resolve, reject) {\n              transaction.oncomplete = function () {\n                resolve(result);\n              };\n\n              transaction.onerror = function () {\n                reject(transaction.error);\n              };\n            })];\n        }\n      });\n    });\n  };\n  /** Gets the cached db connection or opens a new one. */\n\n\n  DbInterface.prototype.getDb = function () {\n    var _this = this;\n\n    if (!this.dbPromise) {\n      this.dbPromise = new Promise(function (resolve, reject) {\n        var request = indexedDB.open(_this.dbName, _this.dbVersion);\n\n        request.onsuccess = function () {\n          resolve(request.result);\n        };\n\n        request.onerror = function () {\n          _this.dbPromise = null;\n          reject(request.error);\n        };\n\n        request.onupgradeneeded = function (event) {\n          return _this.onDbUpgrade(request, event);\n        };\n      });\n    }\n\n    return this.dbPromise;\n  };\n\n  return DbInterface;\n}();\n/** Promisifies an IDBRequest. Resolves with the IDBRequest's result. */\n\n\nfunction promisify(request) {\n  return new Promise(function (resolve, reject) {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n\n    request.onerror = function () {\n      reject(request.error);\n    };\n  });\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TokenDetailsModel =\n/** @class */\nfunction (_super) {\n  __extends(TokenDetailsModel, _super);\n\n  function TokenDetailsModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.dbName = 'fcm_token_details_db';\n    _this.dbVersion = 3;\n    _this.objectStoreName = 'fcm_token_object_Store';\n    return _this;\n  }\n\n  TokenDetailsModel.prototype.onDbUpgrade = function (request, event) {\n    var db = request.result; // Lack of 'break' statements is intentional.\n\n    switch (event.oldVersion) {\n      case 0:\n        {\n          // New IDB instance\n          var objectStore = db.createObjectStore(this.objectStoreName, {\n            keyPath: 'swScope'\n          }); // Make sure the sender ID can be searched\n\n          objectStore.createIndex('fcmSenderId', 'fcmSenderId', {\n            unique: false\n          });\n          objectStore.createIndex('fcmToken', 'fcmToken', {\n            unique: true\n          });\n        }\n\n      case 1:\n        {\n          // Prior to version 2, we were using either 'fcm_token_details_db'\n          // or 'undefined' as the database name due to bug in the SDK\n          // So remove the old tokens and databases.\n          cleanV1();\n        }\n\n      case 2:\n        {\n          var objectStore = request.transaction.objectStore(this.objectStoreName);\n          var cursorRequest_1 = objectStore.openCursor();\n\n          cursorRequest_1.onsuccess = function () {\n            var cursor = cursorRequest_1.result;\n\n            if (cursor) {\n              var value = cursor.value;\n\n              var newValue = __assign({}, value);\n\n              if (!value.createTime) {\n                newValue.createTime = Date.now();\n              }\n\n              if (typeof value.vapidKey === 'string') {\n                newValue.vapidKey = base64ToArrayBuffer(value.vapidKey);\n              }\n\n              if (typeof value.auth === 'string') {\n                newValue.auth = base64ToArrayBuffer(value.auth).buffer;\n              }\n\n              if (typeof value.auth === 'string') {\n                newValue.p256dh = base64ToArrayBuffer(value.p256dh).buffer;\n              }\n\n              cursor.update(newValue);\n              cursor.continue();\n            }\n          };\n        }\n\n      default: // ignore\n\n    }\n  };\n  /**\r\n   * Given a token, this method will look up the details in indexedDB.\r\n   */\n\n\n  TokenDetailsModel.prototype.getTokenDetailsFromToken = function (fcmToken) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (!fcmToken) {\n          throw errorFactory.create(\"bad-token\"\n          /* BAD_TOKEN */\n          );\n        }\n\n        validateInputs({\n          fcmToken: fcmToken\n        });\n        return [2\n        /*return*/\n        , this.getIndex('fcmToken', fcmToken)];\n      });\n    });\n  };\n  /**\r\n   * Given a service worker scope, this method will look up the details in\r\n   * indexedDB.\r\n   * @return The details associated with that token.\r\n   */\n\n\n  TokenDetailsModel.prototype.getTokenDetailsFromSWScope = function (swScope) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (!swScope) {\n          throw errorFactory.create(\"bad-scope\"\n          /* BAD_SCOPE */\n          );\n        }\n\n        validateInputs({\n          swScope: swScope\n        });\n        return [2\n        /*return*/\n        , this.get(swScope)];\n      });\n    });\n  };\n  /**\r\n   * Save the details for the fcm token for re-use at a later date.\r\n   * @param input A plain js object containing args to save.\r\n   */\n\n\n  TokenDetailsModel.prototype.saveTokenDetails = function (tokenDetails) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (!tokenDetails.swScope) {\n          throw errorFactory.create(\"bad-scope\"\n          /* BAD_SCOPE */\n          );\n        }\n\n        if (!tokenDetails.vapidKey) {\n          throw errorFactory.create(\"bad-vapid-key\"\n          /* BAD_VAPID_KEY */\n          );\n        }\n\n        if (!tokenDetails.endpoint || !tokenDetails.auth || !tokenDetails.p256dh) {\n          throw errorFactory.create(\"bad-subscription\"\n          /* BAD_SUBSCRIPTION */\n          );\n        }\n\n        if (!tokenDetails.fcmSenderId) {\n          throw errorFactory.create(\"bad-sender-id\"\n          /* BAD_SENDER_ID */\n          );\n        }\n\n        if (!tokenDetails.fcmToken) {\n          throw errorFactory.create(\"bad-token\"\n          /* BAD_TOKEN */\n          );\n        }\n\n        if (!tokenDetails.fcmPushSet) {\n          throw errorFactory.create(\"bad-push-set\"\n          /* BAD_PUSH_SET */\n          );\n        }\n\n        validateInputs(tokenDetails);\n        return [2\n        /*return*/\n        , this.put(tokenDetails)];\n      });\n    });\n  };\n  /**\r\n   * This method deletes details of the current FCM token.\r\n   * It's returning a promise in case we need to move to an async\r\n   * method for deleting at a later date.\r\n   *\r\n   * @return Resolves once the FCM token details have been deleted and returns\r\n   * the deleted details.\r\n   */\n\n\n  TokenDetailsModel.prototype.deleteToken = function (token) {\n    return __awaiter(this, void 0, void 0, function () {\n      var details;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (typeof token !== 'string' || token.length === 0) {\n              return [2\n              /*return*/\n              , Promise.reject(errorFactory.create(\"invalid-delete-token\"\n              /* INVALID_DELETE_TOKEN */\n              ))];\n            }\n\n            return [4\n            /*yield*/\n            , this.getTokenDetailsFromToken(token)];\n\n          case 1:\n            details = _a.sent();\n\n            if (!details) {\n              throw errorFactory.create(\"delete-token-not-found\"\n              /* DELETE_TOKEN_NOT_FOUND */\n              );\n            }\n\n            return [4\n            /*yield*/\n            , this.delete(details.swScope)];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , details];\n        }\n      });\n    });\n  };\n\n  return TokenDetailsModel;\n}(DbInterface);\n/**\r\n * This method takes an object and will check for known arguments and\r\n * validate the input.\r\n * @return Promise that resolves if input is valid, rejects otherwise.\r\n */\n\n\nfunction validateInputs(input) {\n  if (input.fcmToken) {\n    if (typeof input.fcmToken !== 'string' || input.fcmToken.length === 0) {\n      throw errorFactory.create(\"bad-token\"\n      /* BAD_TOKEN */\n      );\n    }\n  }\n\n  if (input.swScope) {\n    if (typeof input.swScope !== 'string' || input.swScope.length === 0) {\n      throw errorFactory.create(\"bad-scope\"\n      /* BAD_SCOPE */\n      );\n    }\n  }\n\n  if (input.vapidKey) {\n    if (!(input.vapidKey instanceof Uint8Array) || input.vapidKey.length !== 65) {\n      throw errorFactory.create(\"bad-vapid-key\"\n      /* BAD_VAPID_KEY */\n      );\n    }\n  }\n\n  if (input.endpoint) {\n    if (typeof input.endpoint !== 'string' || input.endpoint.length === 0) {\n      throw errorFactory.create(\"bad-subscription\"\n      /* BAD_SUBSCRIPTION */\n      );\n    }\n  }\n\n  if (input.auth) {\n    if (!(input.auth instanceof ArrayBuffer)) {\n      throw errorFactory.create(\"bad-subscription\"\n      /* BAD_SUBSCRIPTION */\n      );\n    }\n  }\n\n  if (input.p256dh) {\n    if (!(input.p256dh instanceof ArrayBuffer)) {\n      throw errorFactory.create(\"bad-subscription\"\n      /* BAD_SUBSCRIPTION */\n      );\n    }\n  }\n\n  if (input.fcmSenderId) {\n    if (typeof input.fcmSenderId !== 'string' || input.fcmSenderId.length === 0) {\n      throw errorFactory.create(\"bad-sender-id\"\n      /* BAD_SENDER_ID */\n      );\n    }\n  }\n\n  if (input.fcmPushSet) {\n    if (typeof input.fcmPushSet !== 'string' || input.fcmPushSet.length === 0) {\n      throw errorFactory.create(\"bad-push-set\"\n      /* BAD_PUSH_SET */\n      );\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar UNCOMPRESSED_PUBLIC_KEY_SIZE = 65;\n\nvar VapidDetailsModel =\n/** @class */\nfunction (_super) {\n  __extends(VapidDetailsModel, _super);\n\n  function VapidDetailsModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.dbName = 'fcm_vapid_details_db';\n    _this.dbVersion = 1;\n    _this.objectStoreName = 'fcm_vapid_object_Store';\n    return _this;\n  }\n\n  VapidDetailsModel.prototype.onDbUpgrade = function (request) {\n    var db = request.result;\n    db.createObjectStore(this.objectStoreName, {\n      keyPath: 'swScope'\n    });\n  };\n  /**\r\n   * Given a service worker scope, this method will look up the vapid key\r\n   * in indexedDB.\r\n   */\n\n\n  VapidDetailsModel.prototype.getVapidFromSWScope = function (swScope) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (typeof swScope !== 'string' || swScope.length === 0) {\n              throw errorFactory.create(\"bad-scope\"\n              /* BAD_SCOPE */\n              );\n            }\n\n            return [4\n            /*yield*/\n            , this.get(swScope)];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result ? result.vapidKey : undefined];\n        }\n      });\n    });\n  };\n  /**\r\n   * Save a vapid key against a swScope for later date.\r\n   */\n\n\n  VapidDetailsModel.prototype.saveVapidDetails = function (swScope, vapidKey) {\n    return __awaiter(this, void 0, void 0, function () {\n      var details;\n      return __generator(this, function (_a) {\n        if (typeof swScope !== 'string' || swScope.length === 0) {\n          throw errorFactory.create(\"bad-scope\"\n          /* BAD_SCOPE */\n          );\n        }\n\n        if (vapidKey === null || vapidKey.length !== UNCOMPRESSED_PUBLIC_KEY_SIZE) {\n          throw errorFactory.create(\"bad-vapid-key\"\n          /* BAD_VAPID_KEY */\n          );\n        }\n\n        details = {\n          swScope: swScope,\n          vapidKey: vapidKey\n        };\n        return [2\n        /*return*/\n        , this.put(details)];\n      });\n    });\n  };\n  /**\r\n   * This method deletes details of the current FCM VAPID key for a SW scope.\r\n   * Resolves once the scope/vapid details have been deleted and returns the\r\n   * deleted vapid key.\r\n   */\n\n\n  VapidDetailsModel.prototype.deleteVapidDetails = function (swScope) {\n    return __awaiter(this, void 0, void 0, function () {\n      var vapidKey;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getVapidFromSWScope(swScope)];\n\n          case 1:\n            vapidKey = _a.sent();\n\n            if (!vapidKey) {\n              throw errorFactory.create(\"delete-scope-not-found\"\n              /* DELETE_SCOPE_NOT_FOUND */\n              );\n            }\n\n            return [4\n            /*yield*/\n            , this.delete(swScope)];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , vapidKey];\n        }\n      });\n    });\n  };\n\n  return VapidDetailsModel;\n}(DbInterface);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar SENDER_ID_OPTION_NAME = 'messagingSenderId'; // Database cache should be invalidated once a week.\n\nvar TOKEN_EXPIRATION_MILLIS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nvar BaseController =\n/** @class */\nfunction () {\n  /**\r\n   * An interface of the Messaging Service API\r\n   */\n  function BaseController(app) {\n    var _this = this;\n\n    if (!app.options[SENDER_ID_OPTION_NAME] || typeof app.options[SENDER_ID_OPTION_NAME] !== 'string') {\n      throw errorFactory.create(\"bad-sender-id\"\n      /* BAD_SENDER_ID */\n      );\n    }\n\n    this.messagingSenderId = app.options[SENDER_ID_OPTION_NAME];\n    this.tokenDetailsModel = new TokenDetailsModel();\n    this.vapidDetailsModel = new VapidDetailsModel();\n    this.iidModel = new IidModel();\n    this.app = app;\n    this.INTERNAL = {\n      delete: function _delete() {\n        return _this.delete();\n      }\n    };\n  }\n  /**\r\n   * @export\r\n   */\n\n\n  BaseController.prototype.getToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var currentPermission, swReg, publicVapidKey, pushSubscription, tokenDetails;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            currentPermission = this.getNotificationPermission_();\n\n            if (currentPermission === 'denied') {\n              throw errorFactory.create(\"notifications-blocked\"\n              /* NOTIFICATIONS_BLOCKED */\n              );\n            } else if (currentPermission !== 'granted') {\n              // We must wait for permission to be granted\n              return [2\n              /*return*/\n              , null];\n            }\n\n            return [4\n            /*yield*/\n            , this.getSWRegistration_()];\n\n          case 1:\n            swReg = _a.sent();\n            return [4\n            /*yield*/\n            , this.getPublicVapidKey_()];\n\n          case 2:\n            publicVapidKey = _a.sent();\n            return [4\n            /*yield*/\n            , this.getPushSubscription(swReg, publicVapidKey)];\n\n          case 3:\n            pushSubscription = _a.sent();\n            return [4\n            /*yield*/\n            , this.tokenDetailsModel.getTokenDetailsFromSWScope(swReg.scope)];\n\n          case 4:\n            tokenDetails = _a.sent();\n\n            if (tokenDetails) {\n              return [2\n              /*return*/\n              , this.manageExistingToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\n            }\n\n            return [2\n            /*return*/\n            , this.getNewToken(swReg, pushSubscription, publicVapidKey)];\n        }\n      });\n    });\n  };\n  /**\r\n   * manageExistingToken is triggered if there's an existing FCM token in the\r\n   * database and it can take 3 different actions:\r\n   * 1) Retrieve the existing FCM token from the database.\r\n   * 2) If VAPID details have changed: Delete the existing token and create a\r\n   * new one with the new VAPID key.\r\n   * 3) If the database cache is invalidated: Send a request to FCM to update\r\n   * the token, and to check if the token is still valid on FCM-side.\r\n   */\n\n\n  BaseController.prototype.manageExistingToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\n    return __awaiter(this, void 0, void 0, function () {\n      var isTokenValid, now;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            isTokenValid = isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails);\n\n            if (isTokenValid) {\n              now = Date.now();\n\n              if (now < tokenDetails.createTime + TOKEN_EXPIRATION_MILLIS) {\n                return [2\n                /*return*/\n                , tokenDetails.fcmToken];\n              } else {\n                return [2\n                /*return*/\n                , this.updateToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\n              }\n            } // If the token is no longer valid (for example if the VAPID details\n            // have changed), delete the existing token from the FCM client and server\n            // database. No need to unsubscribe from the Service Worker as we have a\n            // good push subscription that we'd like to use in getNewToken.\n\n\n            return [4\n            /*yield*/\n            , this.deleteTokenFromDB(tokenDetails.fcmToken)];\n\n          case 1:\n            // If the token is no longer valid (for example if the VAPID details\n            // have changed), delete the existing token from the FCM client and server\n            // database. No need to unsubscribe from the Service Worker as we have a\n            // good push subscription that we'd like to use in getNewToken.\n            _a.sent();\n\n            return [2\n            /*return*/\n            , this.getNewToken(swReg, pushSubscription, publicVapidKey)];\n        }\n      });\n    });\n  };\n\n  BaseController.prototype.updateToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\n    return __awaiter(this, void 0, void 0, function () {\n      var updatedToken, allDetails, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 4,, 6]);\n\n            return [4\n            /*yield*/\n            , this.iidModel.updateToken(this.messagingSenderId, tokenDetails.fcmToken, tokenDetails.fcmPushSet, pushSubscription, publicVapidKey)];\n\n          case 1:\n            updatedToken = _a.sent();\n            allDetails = {\n              swScope: swReg.scope,\n              vapidKey: publicVapidKey,\n              fcmSenderId: this.messagingSenderId,\n              fcmToken: updatedToken,\n              fcmPushSet: tokenDetails.fcmPushSet,\n              createTime: Date.now(),\n              endpoint: pushSubscription.endpoint,\n              auth: pushSubscription.getKey('auth'),\n              p256dh: pushSubscription.getKey('p256dh')\n            };\n            return [4\n            /*yield*/\n            , this.tokenDetailsModel.saveTokenDetails(allDetails)];\n\n          case 2:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\n\n          case 3:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , updatedToken];\n\n          case 4:\n            e_1 = _a.sent();\n            return [4\n            /*yield*/\n            , this.deleteToken(tokenDetails.fcmToken)];\n\n          case 5:\n            _a.sent();\n\n            throw e_1;\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  BaseController.prototype.getNewToken = function (swReg, pushSubscription, publicVapidKey) {\n    return __awaiter(this, void 0, void 0, function () {\n      var tokenDetails, allDetails;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.iidModel.getToken(this.messagingSenderId, pushSubscription, publicVapidKey)];\n\n          case 1:\n            tokenDetails = _a.sent();\n            allDetails = {\n              swScope: swReg.scope,\n              vapidKey: publicVapidKey,\n              fcmSenderId: this.messagingSenderId,\n              fcmToken: tokenDetails.token,\n              fcmPushSet: tokenDetails.pushSet,\n              createTime: Date.now(),\n              endpoint: pushSubscription.endpoint,\n              auth: pushSubscription.getKey('auth'),\n              p256dh: pushSubscription.getKey('p256dh')\n            };\n            return [4\n            /*yield*/\n            , this.tokenDetailsModel.saveTokenDetails(allDetails)];\n\n          case 2:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\n\n          case 3:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , tokenDetails.token];\n        }\n      });\n    });\n  };\n  /**\r\n   * This method deletes tokens that the token manager looks after,\r\n   * unsubscribes the token from FCM  and then unregisters the push\r\n   * subscription if it exists. It returns a promise that indicates\r\n   * whether or not the unsubscribe request was processed successfully.\r\n   */\n\n\n  BaseController.prototype.deleteToken = function (token) {\n    return __awaiter(this, void 0, void 0, function () {\n      var registration, pushSubscription;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Delete the token details from the database.\n            return [4\n            /*yield*/\n            , this.deleteTokenFromDB(token)];\n\n          case 1:\n            // Delete the token details from the database.\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.getSWRegistration_()];\n\n          case 2:\n            registration = _a.sent();\n            if (!registration) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , registration.pushManager.getSubscription()];\n\n          case 3:\n            pushSubscription = _a.sent();\n\n            if (pushSubscription) {\n              return [2\n              /*return*/\n              , pushSubscription.unsubscribe()];\n            }\n\n            _a.label = 4;\n\n          case 4:\n            // If there's no SW, consider it a success.\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n  /**\r\n   * This method will delete the token from the client database, and make a\r\n   * call to FCM to remove it from the server DB. Does not temper with the\r\n   * push subscription.\r\n   */\n\n\n  BaseController.prototype.deleteTokenFromDB = function (token) {\n    return __awaiter(this, void 0, void 0, function () {\n      var details;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.tokenDetailsModel.deleteToken(token)];\n\n          case 1:\n            details = _a.sent();\n            return [4\n            /*yield*/\n            , this.iidModel.deleteToken(details.fcmSenderId, details.fcmToken, details.fcmPushSet)];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Gets a PushSubscription for the current user.\r\n   */\n\n\n  BaseController.prototype.getPushSubscription = function (swRegistration, publicVapidKey) {\n    return swRegistration.pushManager.getSubscription().then(function (subscription) {\n      if (subscription) {\n        return subscription;\n      }\n\n      return swRegistration.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey: publicVapidKey\n      });\n    });\n  }; //\n  // The following methods should only be available in the window.\n  //\n\n  /**\r\n   * @deprecated Use Notification.requestPermission() instead.\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\r\n   */\n\n\n  BaseController.prototype.requestPermission = function () {\n    throw errorFactory.create(\"only-available-in-window\"\n    /* AVAILABLE_IN_WINDOW */\n    );\n  };\n\n  BaseController.prototype.useServiceWorker = function (_registration) {\n    throw errorFactory.create(\"only-available-in-window\"\n    /* AVAILABLE_IN_WINDOW */\n    );\n  };\n\n  BaseController.prototype.usePublicVapidKey = function (_b64PublicKey) {\n    throw errorFactory.create(\"only-available-in-window\"\n    /* AVAILABLE_IN_WINDOW */\n    );\n  };\n\n  BaseController.prototype.onMessage = function (_nextOrObserver, _error, _completed) {\n    throw errorFactory.create(\"only-available-in-window\"\n    /* AVAILABLE_IN_WINDOW */\n    );\n  };\n\n  BaseController.prototype.onTokenRefresh = function (_nextOrObserver, _error, _completed) {\n    throw errorFactory.create(\"only-available-in-window\"\n    /* AVAILABLE_IN_WINDOW */\n    );\n  }; //\n  // The following methods are used by the service worker only.\n  //\n\n\n  BaseController.prototype.setBackgroundMessageHandler = function (_callback) {\n    throw errorFactory.create(\"only-available-in-sw\"\n    /* AVAILABLE_IN_SW */\n    );\n  }; //\n  // The following methods are used by the service themselves and not exposed\n  // publicly or not expected to be used by developers.\n  //\n\n  /**\r\n   * This method is required to adhere to the Firebase interface.\r\n   * It closes any currently open indexdb database connections.\r\n   */\n\n\n  BaseController.prototype.delete = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this.tokenDetailsModel.closeDatabase(), this.vapidDetailsModel.closeDatabase()])];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns the current Notification Permission state.\r\n   */\n\n\n  BaseController.prototype.getNotificationPermission_ = function () {\n    return Notification.permission;\n  };\n\n  BaseController.prototype.getTokenDetailsModel = function () {\n    return this.tokenDetailsModel;\n  };\n\n  BaseController.prototype.getVapidDetailsModel = function () {\n    return this.vapidDetailsModel;\n  }; // Visible for testing\n  // TODO: make protected\n\n\n  BaseController.prototype.getIidModel = function () {\n    return this.iidModel;\n  };\n\n  return BaseController;\n}();\n/**\r\n * Checks if the tokenDetails match the details provided in the clients.\r\n */\n\n\nfunction isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails) {\n  if (!tokenDetails.vapidKey || !isArrayBufferEqual(publicVapidKey.buffer, tokenDetails.vapidKey.buffer)) {\n    return false;\n  }\n\n  var isEndpointEqual = pushSubscription.endpoint === tokenDetails.endpoint;\n  var isAuthEqual = isArrayBufferEqual(pushSubscription.getKey('auth'), tokenDetails.auth);\n  var isP256dhEqual = isArrayBufferEqual(pushSubscription.getKey('p256dh'), tokenDetails.p256dh);\n  return isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar FCM_MSG = 'FCM_MSG';\n\nvar SwController =\n/** @class */\nfunction (_super) {\n  __extends(SwController, _super);\n\n  function SwController(app) {\n    var _this = _super.call(this, app) || this;\n\n    _this.bgMessageHandler = null;\n    self.addEventListener('push', function (e) {\n      _this.onPush(e);\n    });\n    self.addEventListener('pushsubscriptionchange', function (e) {\n      _this.onSubChange(e);\n    });\n    self.addEventListener('notificationclick', function (e) {\n      _this.onNotificationClick(e);\n    });\n    return _this;\n  } // Visible for testing\n  // TODO: Make private\n\n\n  SwController.prototype.onPush = function (event) {\n    event.waitUntil(this.onPush_(event));\n  }; // Visible for testing\n  // TODO: Make private\n\n\n  SwController.prototype.onSubChange = function (event) {\n    event.waitUntil(this.onSubChange_(event));\n  }; // Visible for testing\n  // TODO: Make private\n\n\n  SwController.prototype.onNotificationClick = function (event) {\n    event.waitUntil(this.onNotificationClick_(event));\n  };\n  /**\r\n   * A handler for push events that shows notifications based on the content of\r\n   * the payload.\r\n   *\r\n   * The payload must be a JSON-encoded Object with a `notification` key. The\r\n   * value of the `notification` property will be used as the NotificationOptions\r\n   * object passed to showNotification. Additionally, the `title` property of the\r\n   * notification object will be used as the title.\r\n   *\r\n   * If there is no notification data in the payload then no notification will be\r\n   * shown.\r\n   */\n\n\n  SwController.prototype.onPush_ = function (event) {\n    return __awaiter(this, void 0, void 0, function () {\n      var msgPayload, hasVisibleClients, notificationDetails, notificationTitle, reg, actions, maxActions;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!event.data) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            try {\n              msgPayload = event.data.json();\n            } catch (err) {\n              // Not JSON so not an FCM message\n              return [2\n              /*return*/\n              ];\n            }\n\n            return [4\n            /*yield*/\n            , this.hasVisibleClients_()];\n\n          case 1:\n            hasVisibleClients = _a.sent();\n\n            if (hasVisibleClients) {\n              // App in foreground. Send to page.\n              return [2\n              /*return*/\n              , this.sendMessageToWindowClients_(msgPayload)];\n            }\n\n            notificationDetails = this.getNotificationData_(msgPayload);\n            if (!notificationDetails) return [3\n            /*break*/\n            , 3];\n            notificationTitle = notificationDetails.title || '';\n            return [4\n            /*yield*/\n            , this.getSWRegistration_()];\n\n          case 2:\n            reg = _a.sent();\n            actions = notificationDetails.actions;\n            maxActions = Notification.maxActions; // tslint:enable no-any\n\n            if (actions && maxActions && actions.length > maxActions) {\n              console.warn(\"This browser only supports \" + maxActions + \" actions.\" + \"The remaining actions will not be displayed.\");\n            }\n\n            return [2\n            /*return*/\n            , reg.showNotification(notificationTitle, notificationDetails)];\n\n          case 3:\n            if (!this.bgMessageHandler) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this.bgMessageHandler(msgPayload)];\n\n          case 4:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  SwController.prototype.onSubChange_ = function (_event) {\n    return __awaiter(this, void 0, void 0, function () {\n      var registration, err_1, err_2, tokenDetailsModel, tokenDetails;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.getSWRegistration_()];\n\n          case 1:\n            registration = _a.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            err_1 = _a.sent();\n            throw errorFactory.create(\"unable-to-resubscribe\"\n            /* UNABLE_TO_RESUBSCRIBE */\n            , {\n              errorInfo: err_1\n            });\n\n          case 3:\n            _a.trys.push([3, 5,, 8]);\n\n            return [4\n            /*yield*/\n            , registration.pushManager.getSubscription()];\n\n          case 4:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 8];\n\n          case 5:\n            err_2 = _a.sent();\n            tokenDetailsModel = this.getTokenDetailsModel();\n            return [4\n            /*yield*/\n            , tokenDetailsModel.getTokenDetailsFromSWScope(registration.scope)];\n\n          case 6:\n            tokenDetails = _a.sent();\n\n            if (!tokenDetails) {\n              // This should rarely occure, but could if indexedDB\n              // is corrupted or wiped\n              throw err_2;\n            } // Attempt to delete the token if we know it's bad\n\n\n            return [4\n            /*yield*/\n            , this.deleteToken(tokenDetails.fcmToken)];\n\n          case 7:\n            // Attempt to delete the token if we know it's bad\n            _a.sent();\n\n            throw err_2;\n\n          case 8:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  SwController.prototype.onNotificationClick_ = function (event) {\n    return __awaiter(this, void 0, void 0, function () {\n      var msgPayload, link, windowClient, internalMsg;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!event.notification || !event.notification.data || !event.notification.data[FCM_MSG]) {\n              // Not an FCM notification, do nothing.\n              return [2\n              /*return*/\n              ];\n            } else if (event.action) {\n              // User clicked on an action button.\n              // This will allow devs to act on action button clicks by using a custom\n              // onNotificationClick listener that they define.\n              return [2\n              /*return*/\n              ];\n            } // Prevent other listeners from receiving the event\n\n\n            event.stopImmediatePropagation();\n            event.notification.close();\n            msgPayload = event.notification.data[FCM_MSG];\n\n            if (!msgPayload.notification) {\n              // Nothing to do.\n              return [2\n              /*return*/\n              ];\n            }\n\n            link = msgPayload.fcmOptions && msgPayload.fcmOptions.link || msgPayload.notification.click_action;\n\n            if (!link) {\n              // Nothing to do.\n              return [2\n              /*return*/\n              ];\n            }\n\n            return [4\n            /*yield*/\n            , this.getWindowClient_(link)];\n\n          case 1:\n            windowClient = _a.sent();\n            if (!!windowClient) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , self.clients.openWindow(link)];\n\n          case 2:\n            // Unable to find window client so need to open one.\n            windowClient = _a.sent();\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            return [4\n            /*yield*/\n            , windowClient.focus()];\n\n          case 4:\n            windowClient = _a.sent();\n            _a.label = 5;\n\n          case 5:\n            if (!windowClient) {\n              // Window Client will not be returned if it's for a third party origin.\n              return [2\n              /*return*/\n              ];\n            } // Delete notification and fcmOptions data from payload before sending to\n            // the page.\n\n\n            delete msgPayload.notification;\n            delete msgPayload.fcmOptions;\n            internalMsg = createNewMsg(MessageType.NOTIFICATION_CLICKED, msgPayload); // Attempt to send a message to the client to handle the data\n            // Is affected by: https://github.com/slightlyoff/ServiceWorker/issues/728\n\n            return [2\n            /*return*/\n            , this.attemptToMessageClient_(windowClient, internalMsg)];\n        }\n      });\n    });\n  }; // Visible for testing\n  // TODO: Make private\n\n\n  SwController.prototype.getNotificationData_ = function (msgPayload) {\n    var _a;\n\n    if (!msgPayload) {\n      return;\n    }\n\n    if (typeof msgPayload.notification !== 'object') {\n      return;\n    }\n\n    var notificationInformation = __assign({}, msgPayload.notification); // Put the message payload under FCM_MSG name so we can identify the\n    // notification as being an FCM notification vs a notification from\n    // somewhere else (i.e. normal web push or developer generated\n    // notification).\n\n\n    notificationInformation.data = __assign({}, msgPayload.notification.data, (_a = {}, _a[FCM_MSG] = msgPayload, _a));\n    return notificationInformation;\n  };\n  /**\r\n   * Calling setBackgroundMessageHandler will opt in to some specific\r\n   * behaviours.\r\n   * 1.) If a notification doesn't need to be shown due to a window already\r\n   * being visible, then push messages will be sent to the page.\r\n   * 2.) If a notification needs to be shown, and the message contains no\r\n   * notification data this method will be called\r\n   * and the promise it returns will be passed to event.waitUntil.\r\n   * If you do not set this callback then all push messages will let and the\r\n   * developer can handle them in a their own 'push' event callback\r\n   *\r\n   * @param callback The callback to be called when a push message is received\r\n   * and a notification must be shown. The callback will be given the data from\r\n   * the push message.\r\n   */\n\n\n  SwController.prototype.setBackgroundMessageHandler = function (callback) {\n    if (!callback || typeof callback !== 'function') {\n      throw errorFactory.create(\"bg-handler-function-expected\"\n      /* BG_HANDLER_FUNCTION_EXPECTED */\n      );\n    }\n\n    this.bgMessageHandler = callback;\n  };\n  /**\r\n   * @param url The URL to look for when focusing a client.\r\n   * @return Returns an existing window client or a newly opened WindowClient.\r\n   */\n  // Visible for testing\n  // TODO: Make private\n\n\n  SwController.prototype.getWindowClient_ = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      var parsedURL, clientList, suitableClient, i, parsedClientUrl;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            parsedURL = new URL(url, self.location.href).href;\n            return [4\n            /*yield*/\n            , getClientList()];\n\n          case 1:\n            clientList = _a.sent();\n            suitableClient = null;\n\n            for (i = 0; i < clientList.length; i++) {\n              parsedClientUrl = new URL(clientList[i].url, self.location.href).href;\n\n              if (parsedClientUrl === parsedURL) {\n                suitableClient = clientList[i];\n                break;\n              }\n            }\n\n            return [2\n            /*return*/\n            , suitableClient];\n        }\n      });\n    });\n  };\n  /**\r\n   * This message will attempt to send the message to a window client.\r\n   * @param client The WindowClient to send the message to.\r\n   * @param message The message to send to the client.\r\n   * @returns Returns a promise that resolves after sending the message. This\r\n   * does not guarantee that the message was successfully received.\r\n   */\n  // Visible for testing\n  // TODO: Make private\n\n\n  SwController.prototype.attemptToMessageClient_ = function (client, message) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        // NOTE: This returns a promise in case this API is abstracted later on to\n        // do additional work\n        if (!client) {\n          throw errorFactory.create(\"no-window-client-to-msg\"\n          /* NO_WINDOW_CLIENT_TO_MSG */\n          );\n        }\n\n        client.postMessage(message);\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\r\n   * @returns If there is currently a visible WindowClient, this method will\r\n   * resolve to true, otherwise false.\r\n   */\n  // Visible for testing\n  // TODO: Make private\n\n\n  SwController.prototype.hasVisibleClients_ = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var clientList;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , getClientList()];\n\n          case 1:\n            clientList = _a.sent();\n            return [2\n            /*return*/\n            , clientList.some(function (client) {\n              return client.visibilityState === 'visible' && // Ignore chrome-extension clients as that matches the background pages\n              // of extensions, which are always considered visible.\n              !client.url.startsWith('chrome-extension://');\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   * @param msgPayload The data from the push event that should be sent to all\r\n   * available pages.\r\n   * @returns Returns a promise that resolves once the message has been sent to\r\n   * all WindowClients.\r\n   */\n  // Visible for testing\n  // TODO: Make private\n\n\n  SwController.prototype.sendMessageToWindowClients_ = function (msgPayload) {\n    return __awaiter(this, void 0, void 0, function () {\n      var clientList, internalMsg;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , getClientList()];\n\n          case 1:\n            clientList = _a.sent();\n            internalMsg = createNewMsg(MessageType.PUSH_MSG_RECEIVED, msgPayload);\n            return [4\n            /*yield*/\n            , Promise.all(clientList.map(function (client) {\n              return _this.attemptToMessageClient_(client, internalMsg);\n            }))];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * This will register the default service worker and return the registration.\r\n   * @return he service worker registration to be used for the push service.\r\n   */\n\n\n  SwController.prototype.getSWRegistration_ = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , self.registration];\n      });\n    });\n  };\n  /**\r\n   * This will return the default VAPID key or the uint8array version of the\r\n   * public VAPID key provided by the developer.\r\n   */\n\n\n  SwController.prototype.getPublicVapidKey_ = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var swReg, vapidKeyFromDatabase;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getSWRegistration_()];\n\n          case 1:\n            swReg = _a.sent();\n\n            if (!swReg) {\n              throw errorFactory.create(\"sw-registration-expected\"\n              /* SW_REGISTRATION_EXPECTED */\n              );\n            }\n\n            return [4\n            /*yield*/\n            , this.getVapidDetailsModel().getVapidFromSWScope(swReg.scope)];\n\n          case 2:\n            vapidKeyFromDatabase = _a.sent();\n\n            if (vapidKeyFromDatabase == null) {\n              return [2\n              /*return*/\n              , DEFAULT_PUBLIC_VAPID_KEY];\n            }\n\n            return [2\n            /*return*/\n            , vapidKeyFromDatabase];\n        }\n      });\n    });\n  };\n\n  return SwController;\n}(BaseController);\n\nfunction getClientList() {\n  return self.clients.matchAll({\n    type: 'window',\n    includeUncontrolled: true // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\n\n  });\n}\n\nfunction createNewMsg(msgType, msgData) {\n  var _a;\n\n  return _a = {}, _a[MessageParameter.TYPE_OF_MSG] = msgType, _a[MessageParameter.DATA] = msgData, _a;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nvar DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar WindowController =\n/** @class */\nfunction (_super) {\n  __extends(WindowController, _super);\n  /**\r\n   * A service that provides a MessagingService instance.\r\n   */\n\n\n  function WindowController(app) {\n    var _this = _super.call(this, app) || this;\n\n    _this.registrationToUse = null;\n    _this.publicVapidKeyToUse = null;\n    _this.messageObserver = null; // @ts-ignore: Unused variable error, this is not implemented yet.\n\n    _this.tokenRefreshObserver = null;\n    _this.onMessageInternal = createSubscribe(function (observer) {\n      _this.messageObserver = observer;\n    });\n    _this.onTokenRefreshInternal = createSubscribe(function (observer) {\n      _this.tokenRefreshObserver = observer;\n    });\n\n    _this.setupSWMessageListener_();\n\n    return _this;\n  }\n  /**\r\n   * Request permission if it is not currently granted\r\n   *\r\n   * @return Resolves if the permission was granted, otherwise rejects\r\n   *\r\n   * @deprecated Use Notification.requestPermission() instead.\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\r\n   */\n\n\n  WindowController.prototype.requestPermission = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var permissionResult;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this.getNotificationPermission_() === 'granted') {\n              return [2\n              /*return*/\n              ];\n            }\n\n            return [4\n            /*yield*/\n            , Notification.requestPermission()];\n\n          case 1:\n            permissionResult = _a.sent();\n\n            if (permissionResult === 'granted') {\n              return [2\n              /*return*/\n              ];\n            } else if (permissionResult === 'denied') {\n              throw errorFactory.create(\"permission-blocked\"\n              /* PERMISSION_BLOCKED */\n              );\n            } else {\n              throw errorFactory.create(\"permission-default\"\n              /* PERMISSION_DEFAULT */\n              );\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * This method allows a developer to override the default service worker and\r\n   * instead use a custom service worker.\r\n   *\r\n   * @param registration The service worker registration that should be used to\r\n   * receive the push messages.\r\n   */\n\n\n  WindowController.prototype.useServiceWorker = function (registration) {\n    if (!(registration instanceof ServiceWorkerRegistration)) {\n      throw errorFactory.create(\"sw-registration-expected\"\n      /* SW_REGISTRATION_EXPECTED */\n      );\n    }\n\n    if (this.registrationToUse != null) {\n      throw errorFactory.create(\"use-sw-before-get-token\"\n      /* USE_SW_BEFORE_GET_TOKEN */\n      );\n    }\n\n    this.registrationToUse = registration;\n  };\n  /**\r\n   * This method allows a developer to override the default vapid key\r\n   * and instead use a custom VAPID public key.\r\n   *\r\n   * @param publicKey A URL safe base64 encoded string.\r\n   */\n\n\n  WindowController.prototype.usePublicVapidKey = function (publicKey) {\n    if (typeof publicKey !== 'string') {\n      throw errorFactory.create(\"invalid-public-vapid-key\"\n      /* INVALID_PUBLIC_VAPID_KEY */\n      );\n    }\n\n    if (this.publicVapidKeyToUse != null) {\n      throw errorFactory.create(\"use-public-key-before-get-token\"\n      /* USE_PUBLIC_KEY_BEFORE_GET_TOKEN */\n      );\n    }\n\n    var parsedKey = base64ToArrayBuffer(publicKey);\n\n    if (parsedKey.length !== 65) {\n      throw errorFactory.create(\"public-vapid-key-decryption-failed\"\n      /* PUBLIC_KEY_DECRYPTION_FAILED */\n      );\n    }\n\n    this.publicVapidKeyToUse = parsedKey;\n  };\n  /**\r\n   * @export\r\n   * @param nextOrObserver An observer object or a function triggered on\r\n   * message.\r\n   * @param error A function triggered on message error.\r\n   * @param completed function triggered when the observer is removed.\r\n   * @return The unsubscribe function for the observer.\r\n   */\n\n\n  WindowController.prototype.onMessage = function (nextOrObserver, error, completed) {\n    if (typeof nextOrObserver === 'function') {\n      return this.onMessageInternal(nextOrObserver, error, completed);\n    } else {\n      return this.onMessageInternal(nextOrObserver);\n    }\n  };\n  /**\r\n   * @param nextOrObserver An observer object or a function triggered on token\r\n   * refresh.\r\n   * @param error A function triggered on token refresh error.\r\n   * @param completed function triggered when the observer is removed.\r\n   * @return The unsubscribe function for the observer.\r\n   */\n\n\n  WindowController.prototype.onTokenRefresh = function (nextOrObserver, error, completed) {\n    if (typeof nextOrObserver === 'function') {\n      return this.onTokenRefreshInternal(nextOrObserver, error, completed);\n    } else {\n      return this.onTokenRefreshInternal(nextOrObserver);\n    }\n  };\n  /**\r\n   * Given a registration, wait for the service worker it relates to\r\n   * become activer\r\n   * @param registration Registration to wait for service worker to become active\r\n   * @return Wait for service worker registration to become active\r\n   */\n  // Visible for testing\n  // TODO: Make private\n\n\n  WindowController.prototype.waitForRegistrationToActivate_ = function (registration) {\n    var serviceWorker = registration.installing || registration.waiting || registration.active;\n    return new Promise(function (resolve, reject) {\n      if (!serviceWorker) {\n        // This is a rare scenario but has occured in firefox\n        reject(errorFactory.create(\"no-sw-in-reg\"\n        /* NO_SW_IN_REG */\n        ));\n        return;\n      } // Because the Promise function is called on next tick there is a\n      // small chance that the worker became active or redundant already.\n\n\n      if (serviceWorker.state === 'activated') {\n        resolve(registration);\n        return;\n      }\n\n      if (serviceWorker.state === 'redundant') {\n        reject(errorFactory.create(\"sw-reg-redundant\"\n        /* SW_REG_REDUNDANT */\n        ));\n        return;\n      }\n\n      var stateChangeListener = function stateChangeListener() {\n        if (serviceWorker.state === 'activated') {\n          resolve(registration);\n        } else if (serviceWorker.state === 'redundant') {\n          reject(errorFactory.create(\"sw-reg-redundant\"\n          /* SW_REG_REDUNDANT */\n          ));\n        } else {\n          // Return early and wait to next state change\n          return;\n        }\n\n        serviceWorker.removeEventListener('statechange', stateChangeListener);\n      };\n\n      serviceWorker.addEventListener('statechange', stateChangeListener);\n    });\n  };\n  /**\r\n   * This will register the default service worker and return the registration\r\n   * @return The service worker registration to be used for the push service.\r\n   */\n\n\n  WindowController.prototype.getSWRegistration_ = function () {\n    var _this = this;\n\n    if (this.registrationToUse) {\n      return this.waitForRegistrationToActivate_(this.registrationToUse);\n    } // Make the registration null so we know useServiceWorker will not\n    // use a new service worker as registrationToUse is no longer undefined\n\n\n    this.registrationToUse = null;\n    return navigator.serviceWorker.register(DEFAULT_SW_PATH, {\n      scope: DEFAULT_SW_SCOPE\n    }).catch(function (err) {\n      throw errorFactory.create(\"failed-serviceworker-registration\"\n      /* FAILED_DEFAULT_REGISTRATION */\n      , {\n        browserErrorMessage: err.message\n      });\n    }).then(function (registration) {\n      return _this.waitForRegistrationToActivate_(registration).then(function () {\n        _this.registrationToUse = registration; // We update after activation due to an issue with Firefox v49 where\n        // a race condition occassionally causes the service worker to not\n        // install\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n        registration.update();\n        return registration;\n      });\n    });\n  };\n  /**\r\n   * This will return the default VAPID key or the uint8array version of the public VAPID key\r\n   * provided by the developer.\r\n   */\n\n\n  WindowController.prototype.getPublicVapidKey_ = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (this.publicVapidKeyToUse) {\n          return [2\n          /*return*/\n          , this.publicVapidKeyToUse];\n        }\n\n        return [2\n        /*return*/\n        , DEFAULT_PUBLIC_VAPID_KEY];\n      });\n    });\n  };\n  /**\r\n   * This method will set up a message listener to handle\r\n   * events from the service worker that should trigger\r\n   * events in the page.\r\n   */\n  // Visible for testing\n  // TODO: Make private\n\n\n  WindowController.prototype.setupSWMessageListener_ = function () {\n    var _this = this;\n\n    navigator.serviceWorker.addEventListener('message', function (event) {\n      if (!event.data || !event.data[MessageParameter.TYPE_OF_MSG]) {\n        // Not a message from FCM\n        return;\n      }\n\n      var workerPageMessage = event.data;\n\n      switch (workerPageMessage[MessageParameter.TYPE_OF_MSG]) {\n        case MessageType.PUSH_MSG_RECEIVED:\n        case MessageType.NOTIFICATION_CLICKED:\n          var pushMessage = workerPageMessage[MessageParameter.DATA];\n\n          if (_this.messageObserver) {\n            _this.messageObserver.next(pushMessage);\n          }\n\n          break;\n\n        default:\n          // Noop.\n          break;\n      }\n    }, false);\n  };\n\n  return WindowController;\n}(BaseController);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction registerMessaging(instance) {\n  var messagingName = 'messaging';\n\n  var factoryMethod = function factoryMethod(app) {\n    if (!isSupported()) {\n      throw errorFactory.create(\"unsupported-browser\"\n      /* UNSUPPORTED_BROWSER */\n      );\n    }\n\n    if (self && 'ServiceWorkerGlobalScope' in self) {\n      // Running in ServiceWorker context\n      return new SwController(app);\n    } else {\n      // Assume we are in the window context.\n      return new WindowController(app);\n    }\n  };\n\n  var namespaceExports = {\n    isSupported: isSupported\n  };\n  instance.INTERNAL.registerService(messagingName, factoryMethod, namespaceExports);\n}\n\nregisterMessaging(firebase);\n\nfunction isSupported() {\n  if (self && 'ServiceWorkerGlobalScope' in self) {\n    // Running in ServiceWorker context\n    return isSWControllerSupported();\n  } else {\n    // Assume we are in the window context.\n    return isWindowControllerSupported();\n  }\n}\n/**\r\n * Checks to see if the required APIs exist.\r\n */\n\n\nfunction isWindowControllerSupported() {\n  return navigator.cookieEnabled && 'serviceWorker' in navigator && 'PushManager' in window && 'Notification' in window && 'fetch' in window && ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') && PushSubscription.prototype.hasOwnProperty('getKey');\n}\n/**\r\n * Checks to see if the required APIs exist within SW Context.\r\n */\n\n\nfunction isSWControllerSupported() {\n  return 'PushManager' in self && 'Notification' in self && ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') && PushSubscription.prototype.hasOwnProperty('getKey');\n}\n\nexport { isSupported, registerMessaging }; //# sourceMappingURL=index.esm.js.map","map":{"version":3,"sources":["C:/Users/beetechnica-1/hamza/_zeitlaeufte-react-admin-t/node_modules/@firebase/messaging/dist/index.esm.js"],"names":["firebase","__spread","__awaiter","__generator","__extends","__assign","ErrorFactory","createSubscribe","_a","ERROR_MAP","errorFactory","DEFAULT_PUBLIC_VAPID_KEY","Uint8Array","ENDPOINT","MessageParameter","MessageType","isArrayBufferEqual","a","b","byteLength","viewA","DataView","viewB","i","getUint8","toBase64","arrayBuffer","uint8Version","btoa","String","fromCharCode","apply","arrayBufferToBase64","base64String","replace","IidModel","prototype","getToken","senderId","subscription","publicVapidKey","p256dh","auth","fcmSubscribeBody","applicationPubKey","headers","subscribeOptions","responseData","response","err_1","message","label","getKey","endpoint","buffer","Headers","append","method","body","trys","push","fetch","sent","json","create","errorInfo","error","token","pushSet","updateToken","fcmToken","fcmPushSet","fcmUpdateBody","updateOptions","err_2","deleteToken","fcmUnsubscribeBody","unsubscribeOptions","err_3","base64ToArrayBuffer","padding","repeat","length","base64","rawData","atob","outputArray","charCodeAt","OLD_DB_NAME","OLD_OBJECT_STORE_NAME","handleDb","db","objectStoreNames","contains","transaction","objectStore","iidModel","openCursorRequest","openCursor","onerror","event","console","warn","onsuccess","cursor","result","tokenDetails","value","fcmSenderId","continue","close","indexedDB","deleteDatabase","cleanV1","request","open","_event","DbInterface","dbPromise","get","key","createTransaction","getIndex","index","runRequest","idbIndex","put","delete","closeDatabase","mode","getDb","objectStoreName","promisify","Promise","resolve","reject","oncomplete","_this","dbName","dbVersion","onupgradeneeded","onDbUpgrade","TokenDetailsModel","_super","arguments","oldVersion","createObjectStore","keyPath","createIndex","unique","cursorRequest_1","newValue","createTime","Date","now","vapidKey","update","getTokenDetailsFromToken","validateInputs","getTokenDetailsFromSWScope","swScope","saveTokenDetails","details","input","ArrayBuffer","UNCOMPRESSED_PUBLIC_KEY_SIZE","VapidDetailsModel","getVapidFromSWScope","undefined","saveVapidDetails","deleteVapidDetails","SENDER_ID_OPTION_NAME","TOKEN_EXPIRATION_MILLIS","BaseController","app","options","messagingSenderId","tokenDetailsModel","vapidDetailsModel","INTERNAL","currentPermission","swReg","pushSubscription","getNotificationPermission_","getSWRegistration_","getPublicVapidKey_","getPushSubscription","scope","manageExistingToken","getNewToken","isTokenValid","isTokenStillValid","deleteTokenFromDB","updatedToken","allDetails","e_1","registration","pushManager","getSubscription","unsubscribe","swRegistration","then","subscribe","userVisibleOnly","applicationServerKey","requestPermission","useServiceWorker","_registration","usePublicVapidKey","_b64PublicKey","onMessage","_nextOrObserver","_error","_completed","onTokenRefresh","setBackgroundMessageHandler","_callback","all","Notification","permission","getTokenDetailsModel","getVapidDetailsModel","getIidModel","isEndpointEqual","isAuthEqual","isP256dhEqual","FCM_MSG","SwController","call","bgMessageHandler","self","addEventListener","e","onPush","onSubChange","onNotificationClick","waitUntil","onPush_","onSubChange_","onNotificationClick_","msgPayload","hasVisibleClients","notificationDetails","notificationTitle","reg","actions","maxActions","data","err","hasVisibleClients_","sendMessageToWindowClients_","getNotificationData_","title","showNotification","link","windowClient","internalMsg","notification","action","stopImmediatePropagation","fcmOptions","click_action","getWindowClient_","clients","openWindow","focus","createNewMsg","NOTIFICATION_CLICKED","attemptToMessageClient_","notificationInformation","callback","url","parsedURL","clientList","suitableClient","parsedClientUrl","URL","location","href","getClientList","client","postMessage","some","visibilityState","startsWith","PUSH_MSG_RECEIVED","map","vapidKeyFromDatabase","matchAll","type","includeUncontrolled","msgType","msgData","TYPE_OF_MSG","DATA","DEFAULT_SW_PATH","DEFAULT_SW_SCOPE","WindowController","registrationToUse","publicVapidKeyToUse","messageObserver","tokenRefreshObserver","onMessageInternal","observer","onTokenRefreshInternal","setupSWMessageListener_","permissionResult","ServiceWorkerRegistration","publicKey","parsedKey","nextOrObserver","completed","waitForRegistrationToActivate_","serviceWorker","installing","waiting","active","state","stateChangeListener","removeEventListener","navigator","register","catch","browserErrorMessage","workerPageMessage","pushMessage","next","registerMessaging","instance","messagingName","factoryMethod","isSupported","namespaceExports","registerService","isSWControllerSupported","isWindowControllerSupported","cookieEnabled","window","hasOwnProperty","PushSubscription"],"mappings":"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","sourcesContent":["import firebase from '@firebase/app';\nimport { __spread, __awaiter, __generator, __extends, __assign } from 'tslib';\nimport { ErrorFactory, createSubscribe } from '@firebase/util';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_MAP = (_a = {},\r\n    _a[\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */] = 'This method is available in a Window context.',\r\n    _a[\"only-available-in-sw\" /* AVAILABLE_IN_SW */] = 'This method is available in a service worker context.',\r\n    _a[\"should-be-overriden\" /* SHOULD_BE_INHERITED */] = 'This method should be overriden by extended classes.',\r\n    _a[\"bad-sender-id\" /* BAD_SENDER_ID */] = \"Please ensure that 'messagingSenderId' is set \" +\r\n        'correctly in the options passed into firebase.initializeApp().',\r\n    _a[\"permission-default\" /* PERMISSION_DEFAULT */] = 'The required permissions were not granted and dismissed instead.',\r\n    _a[\"permission-blocked\" /* PERMISSION_BLOCKED */] = 'The required permissions were not granted and blocked instead.',\r\n    _a[\"unsupported-browser\" /* UNSUPPORTED_BROWSER */] = \"This browser doesn't support the API's \" +\r\n        'required to use the firebase SDK.',\r\n    _a[\"notifications-blocked\" /* NOTIFICATIONS_BLOCKED */] = 'Notifications have been blocked.',\r\n    _a[\"failed-serviceworker-registration\" /* FAILED_DEFAULT_REGISTRATION */] = 'We are unable to register the ' +\r\n        'default service worker. {$browserErrorMessage}',\r\n    _a[\"sw-registration-expected\" /* SW_REGISTRATION_EXPECTED */] = 'A service worker registration was the expected input.',\r\n    _a[\"get-subscription-failed\" /* GET_SUBSCRIPTION_FAILED */] = 'There was an error when trying to get ' +\r\n        'any existing Push Subscriptions.',\r\n    _a[\"invalid-saved-token\" /* INVALID_SAVED_TOKEN */] = 'Unable to access details of the saved token.',\r\n    _a[\"sw-reg-redundant\" /* SW_REG_REDUNDANT */] = 'The service worker being used for push was made redundant.',\r\n    _a[\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */] = 'A problem occured while subscribing the user to FCM: {$errorInfo}',\r\n    _a[\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */] = 'FCM returned no token when subscribing the user to push.',\r\n    _a[\"token-subscribe-no-push-set\" /* TOKEN_SUBSCRIBE_NO_PUSH_SET */] = 'FCM returned an invalid response when getting an FCM token.',\r\n    _a[\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */] = 'A problem occured while unsubscribing the ' +\r\n        'user from FCM: {$errorInfo}',\r\n    _a[\"token-update-failed\" /* TOKEN_UPDATE_FAILED */] = 'A problem occured while updating the user from FCM: {$errorInfo}',\r\n    _a[\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */] = 'FCM returned no token when updating the user to push.',\r\n    _a[\"use-sw-before-get-token\" /* USE_SW_BEFORE_GET_TOKEN */] = 'The useServiceWorker() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your service worker is used.',\r\n    _a[\"invalid-delete-token\" /* INVALID_DELETE_TOKEN */] = 'You must pass a valid token into ' +\r\n        'deleteToken(), i.e. the token from getToken().',\r\n    _a[\"delete-token-not-found\" /* DELETE_TOKEN_NOT_FOUND */] = 'The deletion attempt for token could not ' +\r\n        'be performed as the token was not found.',\r\n    _a[\"delete-scope-not-found\" /* DELETE_SCOPE_NOT_FOUND */] = 'The deletion attempt for service worker ' +\r\n        'scope could not be performed as the scope was not found.',\r\n    _a[\"bg-handler-function-expected\" /* BG_HANDLER_FUNCTION_EXPECTED */] = 'The input to setBackgroundMessageHandler() must be a function.',\r\n    _a[\"no-window-client-to-msg\" /* NO_WINDOW_CLIENT_TO_MSG */] = 'An attempt was made to message a non-existant window client.',\r\n    _a[\"unable-to-resubscribe\" /* UNABLE_TO_RESUBSCRIBE */] = 'There was an error while re-subscribing ' +\r\n        'the FCM token for push messaging. Will have to resubscribe the ' +\r\n        'user on next visit. {$errorInfo}',\r\n    _a[\"no-fcm-token-for-resubscribe\" /* NO_FCM_TOKEN_FOR_RESUBSCRIBE */] = 'Could not find an FCM token ' +\r\n        'and as a result, unable to resubscribe. Will have to resubscribe the ' +\r\n        'user on next visit.',\r\n    _a[\"failed-to-delete-token\" /* FAILED_TO_DELETE_TOKEN */] = 'Unable to delete the currently saved token.',\r\n    _a[\"no-sw-in-reg\" /* NO_SW_IN_REG */] = 'Even though the service worker registration was ' +\r\n        'successful, there was a problem accessing the service worker itself.',\r\n    _a[\"bad-scope\" /* BAD_SCOPE */] = 'The service worker scope must be a string with at ' +\r\n        'least one character.',\r\n    _a[\"bad-vapid-key\" /* BAD_VAPID_KEY */] = 'The public VAPID key is not a Uint8Array with 65 bytes.',\r\n    _a[\"bad-subscription\" /* BAD_SUBSCRIPTION */] = 'The subscription must be a valid PushSubscription.',\r\n    _a[\"bad-token\" /* BAD_TOKEN */] = 'The FCM Token used for storage / lookup was not ' +\r\n        'a valid token string.',\r\n    _a[\"bad-push-set\" /* BAD_PUSH_SET */] = 'The FCM push set used for storage / lookup was not ' +\r\n        'not a valid push set string.',\r\n    _a[\"failed-delete-vapid-key\" /* FAILED_DELETE_VAPID_KEY */] = 'The VAPID key could not be deleted.',\r\n    _a[\"invalid-public-vapid-key\" /* INVALID_PUBLIC_VAPID_KEY */] = 'The public VAPID key must be a string.',\r\n    _a[\"use-public-key-before-get-token\" /* USE_PUBLIC_KEY_BEFORE_GET_TOKEN */] = 'The usePublicVapidKey() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your VAPID key is used.',\r\n    _a[\"public-vapid-key-decryption-failed\" /* PUBLIC_KEY_DECRYPTION_FAILED */] = 'The public VAPID key did not equal 65 bytes when decrypted.',\r\n    _a);\r\nvar errorFactory = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_PUBLIC_VAPID_KEY = new Uint8Array([\r\n    0x04,\r\n    0x33,\r\n    0x94,\r\n    0xf7,\r\n    0xdf,\r\n    0xa1,\r\n    0xeb,\r\n    0xb1,\r\n    0xdc,\r\n    0x03,\r\n    0xa2,\r\n    0x5e,\r\n    0x15,\r\n    0x71,\r\n    0xdb,\r\n    0x48,\r\n    0xd3,\r\n    0x2e,\r\n    0xed,\r\n    0xed,\r\n    0xb2,\r\n    0x34,\r\n    0xdb,\r\n    0xb7,\r\n    0x47,\r\n    0x3a,\r\n    0x0c,\r\n    0x8f,\r\n    0xc4,\r\n    0xcc,\r\n    0xe1,\r\n    0x6f,\r\n    0x3c,\r\n    0x8c,\r\n    0x84,\r\n    0xdf,\r\n    0xab,\r\n    0xb6,\r\n    0x66,\r\n    0x3e,\r\n    0xf2,\r\n    0x0c,\r\n    0xd4,\r\n    0x8b,\r\n    0xfe,\r\n    0xe3,\r\n    0xf9,\r\n    0x76,\r\n    0x2f,\r\n    0x14,\r\n    0x1c,\r\n    0x63,\r\n    0x08,\r\n    0x6a,\r\n    0x6f,\r\n    0x2d,\r\n    0xb1,\r\n    0x1a,\r\n    0x95,\r\n    0xb0,\r\n    0xce,\r\n    0x37,\r\n    0xc0,\r\n    0x9c,\r\n    0x6e\r\n]);\r\nvar ENDPOINT = 'https://fcm.googleapis.com';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MessageParameter;\r\n(function (MessageParameter) {\r\n    MessageParameter[\"TYPE_OF_MSG\"] = \"firebase-messaging-msg-type\";\r\n    MessageParameter[\"DATA\"] = \"firebase-messaging-msg-data\";\r\n})(MessageParameter || (MessageParameter = {}));\r\nvar MessageType;\r\n(function (MessageType) {\r\n    MessageType[\"PUSH_MSG_RECEIVED\"] = \"push-msg-received\";\r\n    MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\r\n})(MessageType || (MessageType = {}));\n\n/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isArrayBufferEqual(a, b) {\r\n    if (a == null || b == null) {\r\n        return false;\r\n    }\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    if (a.byteLength !== b.byteLength) {\r\n        return false;\r\n    }\r\n    var viewA = new DataView(a);\r\n    var viewB = new DataView(b);\r\n    for (var i = 0; i < a.byteLength; i++) {\r\n        if (viewA.getUint8(i) !== viewB.getUint8(i)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction toBase64(arrayBuffer) {\r\n    var uint8Version = new Uint8Array(arrayBuffer);\r\n    return btoa(String.fromCharCode.apply(String, __spread(uint8Version)));\r\n}\r\nfunction arrayBufferToBase64(arrayBuffer) {\r\n    var base64String = toBase64(arrayBuffer);\r\n    return base64String\r\n        .replace(/=/g, '')\r\n        .replace(/\\+/g, '-')\r\n        .replace(/\\//g, '_');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar IidModel = /** @class */ (function () {\r\n    function IidModel() {\r\n    }\r\n    IidModel.prototype.getToken = function (senderId, subscription, publicVapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var p256dh, auth, fcmSubscribeBody, applicationPubKey, headers, subscribeOptions, responseData, response, err_1, message;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        p256dh = arrayBufferToBase64(subscription.getKey('p256dh'));\r\n                        auth = arrayBufferToBase64(subscription.getKey('auth'));\r\n                        fcmSubscribeBody = \"authorized_entity=\" + senderId + \"&\" +\r\n                            (\"endpoint=\" + subscription.endpoint + \"&\") +\r\n                            (\"encryption_key=\" + p256dh + \"&\") +\r\n                            (\"encryption_auth=\" + auth);\r\n                        if (!isArrayBufferEqual(publicVapidKey.buffer, DEFAULT_PUBLIC_VAPID_KEY.buffer)) {\r\n                            applicationPubKey = arrayBufferToBase64(publicVapidKey);\r\n                            fcmSubscribeBody += \"&application_pub_key=\" + applicationPubKey;\r\n                        }\r\n                        headers = new Headers();\r\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                        subscribeOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: fcmSubscribeBody\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(ENDPOINT + '/fcm/connect/subscribe', subscribeOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        responseData = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_1 = _a.sent();\r\n                        throw errorFactory.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n                            errorInfo: err_1\r\n                        });\r\n                    case 5:\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n                                errorInfo: message\r\n                            });\r\n                        }\r\n                        if (!responseData.token) {\r\n                            throw errorFactory.create(\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */);\r\n                        }\r\n                        if (!responseData.pushSet) {\r\n                            throw errorFactory.create(\"token-subscribe-no-push-set\" /* TOKEN_SUBSCRIBE_NO_PUSH_SET */);\r\n                        }\r\n                        return [2 /*return*/, {\r\n                                token: responseData.token,\r\n                                pushSet: responseData.pushSet\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Update the underlying token details for fcmToken.\r\n     */\r\n    IidModel.prototype.updateToken = function (senderId, fcmToken, fcmPushSet, subscription, publicVapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var p256dh, auth, fcmUpdateBody, applicationPubKey, headers, updateOptions, responseData, response, err_2, message;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        p256dh = arrayBufferToBase64(subscription.getKey('p256dh'));\r\n                        auth = arrayBufferToBase64(subscription.getKey('auth'));\r\n                        fcmUpdateBody = \"push_set=\" + fcmPushSet + \"&\" +\r\n                            (\"token=\" + fcmToken + \"&\") +\r\n                            (\"authorized_entity=\" + senderId + \"&\") +\r\n                            (\"endpoint=\" + subscription.endpoint + \"&\") +\r\n                            (\"encryption_key=\" + p256dh + \"&\") +\r\n                            (\"encryption_auth=\" + auth);\r\n                        if (!isArrayBufferEqual(publicVapidKey.buffer, DEFAULT_PUBLIC_VAPID_KEY.buffer)) {\r\n                            applicationPubKey = arrayBufferToBase64(publicVapidKey);\r\n                            fcmUpdateBody += \"&application_pub_key=\" + applicationPubKey;\r\n                        }\r\n                        headers = new Headers();\r\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                        updateOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: fcmUpdateBody\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(ENDPOINT + '/fcm/connect/subscribe', updateOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        responseData = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_2 = _a.sent();\r\n                        throw errorFactory.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n                            errorInfo: err_2\r\n                        });\r\n                    case 5:\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n                                errorInfo: message\r\n                            });\r\n                        }\r\n                        if (!responseData.token) {\r\n                            throw errorFactory.create(\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */);\r\n                        }\r\n                        return [2 /*return*/, responseData.token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Given a fcmToken, pushSet and messagingSenderId, delete an FCM token.\r\n     */\r\n    IidModel.prototype.deleteToken = function (senderId, fcmToken, fcmPushSet) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var fcmUnsubscribeBody, headers, unsubscribeOptions, response, responseData, message, err_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        fcmUnsubscribeBody = \"authorized_entity=\" + senderId + \"&\" +\r\n                            (\"token=\" + fcmToken + \"&\") +\r\n                            (\"pushSet=\" + fcmPushSet);\r\n                        headers = new Headers();\r\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                        unsubscribeOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: fcmUnsubscribeBody\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(ENDPOINT + '/fcm/connect/unsubscribe', unsubscribeOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        responseData = _a.sent();\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n                                errorInfo: message\r\n                            });\r\n                        }\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_3 = _a.sent();\r\n                        throw errorFactory.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n                            errorInfo: err_3\r\n                        });\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return IidModel;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction base64ToArrayBuffer(base64String) {\r\n    var padding = '='.repeat((4 - (base64String.length % 4)) % 4);\r\n    var base64 = (base64String + padding)\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n    var rawData = atob(base64);\r\n    var outputArray = new Uint8Array(rawData.length);\r\n    for (var i = 0; i < rawData.length; ++i) {\r\n        outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OLD_DB_NAME = 'undefined';\r\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\r\nfunction handleDb(db) {\r\n    if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\r\n        // We found a database with the name 'undefined', but our expected object\r\n        // store isn't defined.\r\n        return;\r\n    }\r\n    var transaction = db.transaction(OLD_OBJECT_STORE_NAME);\r\n    var objectStore = transaction.objectStore(OLD_OBJECT_STORE_NAME);\r\n    var iidModel = new IidModel();\r\n    var openCursorRequest = objectStore.openCursor();\r\n    openCursorRequest.onerror = function (event) {\r\n        // NOOP - Nothing we can do.\r\n        console.warn('Unable to cleanup old IDB.', event);\r\n    };\r\n    openCursorRequest.onsuccess = function () {\r\n        var cursor = openCursorRequest.result;\r\n        if (cursor) {\r\n            // cursor.value contains the current record being iterated through\r\n            // this is where you'd do something with the result\r\n            var tokenDetails = cursor.value;\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            iidModel.deleteToken(tokenDetails.fcmSenderId, tokenDetails.fcmToken, tokenDetails.fcmPushSet);\r\n            cursor.continue();\r\n        }\r\n        else {\r\n            db.close();\r\n            indexedDB.deleteDatabase(OLD_DB_NAME);\r\n        }\r\n    };\r\n}\r\nfunction cleanV1() {\r\n    var request = indexedDB.open(OLD_DB_NAME);\r\n    request.onerror = function (_event) {\r\n        // NOOP - Nothing we can do.\r\n    };\r\n    request.onsuccess = function (_event) {\r\n        var db = request.result;\r\n        handleDb(db);\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DbInterface = /** @class */ (function () {\r\n    function DbInterface() {\r\n        this.dbPromise = null;\r\n    }\r\n    /** Gets record(s) from the objectStore that match the given key. */\r\n    DbInterface.prototype.get = function (key) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.get(key); });\r\n    };\r\n    /** Gets record(s) from the objectStore that match the given index. */\r\n    DbInterface.prototype.getIndex = function (index, key) {\r\n        function runRequest(objectStore) {\r\n            var idbIndex = objectStore.index(index);\r\n            return idbIndex.get(key);\r\n        }\r\n        return this.createTransaction(runRequest);\r\n    };\r\n    /** Assigns or overwrites the record for the given value. */\r\n    // IndexedDB values are of type \"any\"\r\n    DbInterface.prototype.put = function (value) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.put(value); }, 'readwrite');\r\n    };\r\n    /** Deletes record(s) from the objectStore that match the given key. */\r\n    DbInterface.prototype.delete = function (key) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.delete(key); }, 'readwrite');\r\n    };\r\n    /**\r\n     * Close the currently open database.\r\n     */\r\n    DbInterface.prototype.closeDatabase = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.dbPromise) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.dbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        db.close();\r\n                        this.dbPromise = null;\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates an IndexedDB Transaction and passes its objectStore to the\r\n     * runRequest function, which runs the database request.\r\n     *\r\n     * @return Promise that resolves with the result of the runRequest function\r\n     */\r\n    DbInterface.prototype.createTransaction = function (runRequest, mode) {\r\n        if (mode === void 0) { mode = 'readonly'; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db, transaction, request, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getDb()];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        transaction = db.transaction(this.objectStoreName, mode);\r\n                        request = transaction.objectStore(this.objectStoreName);\r\n                        return [4 /*yield*/, promisify(runRequest(request))];\r\n                    case 2:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                transaction.oncomplete = function () {\r\n                                    resolve(result);\r\n                                };\r\n                                transaction.onerror = function () {\r\n                                    reject(transaction.error);\r\n                                };\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** Gets the cached db connection or opens a new one. */\r\n    DbInterface.prototype.getDb = function () {\r\n        var _this = this;\r\n        if (!this.dbPromise) {\r\n            this.dbPromise = new Promise(function (resolve, reject) {\r\n                var request = indexedDB.open(_this.dbName, _this.dbVersion);\r\n                request.onsuccess = function () {\r\n                    resolve(request.result);\r\n                };\r\n                request.onerror = function () {\r\n                    _this.dbPromise = null;\r\n                    reject(request.error);\r\n                };\r\n                request.onupgradeneeded = function (event) { return _this.onDbUpgrade(request, event); };\r\n            });\r\n        }\r\n        return this.dbPromise;\r\n    };\r\n    return DbInterface;\r\n}());\r\n/** Promisifies an IDBRequest. Resolves with the IDBRequest's result. */\r\nfunction promisify(request) {\r\n    return new Promise(function (resolve, reject) {\r\n        request.onsuccess = function () {\r\n            resolve(request.result);\r\n        };\r\n        request.onerror = function () {\r\n            reject(request.error);\r\n        };\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TokenDetailsModel = /** @class */ (function (_super) {\r\n    __extends(TokenDetailsModel, _super);\r\n    function TokenDetailsModel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.dbName = 'fcm_token_details_db';\r\n        _this.dbVersion = 3;\r\n        _this.objectStoreName = 'fcm_token_object_Store';\r\n        return _this;\r\n    }\r\n    TokenDetailsModel.prototype.onDbUpgrade = function (request, event) {\r\n        var db = request.result;\r\n        // Lack of 'break' statements is intentional.\r\n        switch (event.oldVersion) {\r\n            case 0: {\r\n                // New IDB instance\r\n                var objectStore = db.createObjectStore(this.objectStoreName, {\r\n                    keyPath: 'swScope'\r\n                });\r\n                // Make sure the sender ID can be searched\r\n                objectStore.createIndex('fcmSenderId', 'fcmSenderId', {\r\n                    unique: false\r\n                });\r\n                objectStore.createIndex('fcmToken', 'fcmToken', { unique: true });\r\n            }\r\n            case 1: {\r\n                // Prior to version 2, we were using either 'fcm_token_details_db'\r\n                // or 'undefined' as the database name due to bug in the SDK\r\n                // So remove the old tokens and databases.\r\n                cleanV1();\r\n            }\r\n            case 2: {\r\n                var objectStore = request.transaction.objectStore(this.objectStoreName);\r\n                var cursorRequest_1 = objectStore.openCursor();\r\n                cursorRequest_1.onsuccess = function () {\r\n                    var cursor = cursorRequest_1.result;\r\n                    if (cursor) {\r\n                        var value = cursor.value;\r\n                        var newValue = __assign({}, value);\r\n                        if (!value.createTime) {\r\n                            newValue.createTime = Date.now();\r\n                        }\r\n                        if (typeof value.vapidKey === 'string') {\r\n                            newValue.vapidKey = base64ToArrayBuffer(value.vapidKey);\r\n                        }\r\n                        if (typeof value.auth === 'string') {\r\n                            newValue.auth = base64ToArrayBuffer(value.auth).buffer;\r\n                        }\r\n                        if (typeof value.auth === 'string') {\r\n                            newValue.p256dh = base64ToArrayBuffer(value.p256dh).buffer;\r\n                        }\r\n                        cursor.update(newValue);\r\n                        cursor.continue();\r\n                    }\r\n                };\r\n            }\r\n            default: // ignore\r\n        }\r\n    };\r\n    /**\r\n     * Given a token, this method will look up the details in indexedDB.\r\n     */\r\n    TokenDetailsModel.prototype.getTokenDetailsFromToken = function (fcmToken) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!fcmToken) {\r\n                    throw errorFactory.create(\"bad-token\" /* BAD_TOKEN */);\r\n                }\r\n                validateInputs({ fcmToken: fcmToken });\r\n                return [2 /*return*/, this.getIndex('fcmToken', fcmToken)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Given a service worker scope, this method will look up the details in\r\n     * indexedDB.\r\n     * @return The details associated with that token.\r\n     */\r\n    TokenDetailsModel.prototype.getTokenDetailsFromSWScope = function (swScope) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!swScope) {\r\n                    throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n                }\r\n                validateInputs({ swScope: swScope });\r\n                return [2 /*return*/, this.get(swScope)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Save the details for the fcm token for re-use at a later date.\r\n     * @param input A plain js object containing args to save.\r\n     */\r\n    TokenDetailsModel.prototype.saveTokenDetails = function (tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!tokenDetails.swScope) {\r\n                    throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n                }\r\n                if (!tokenDetails.vapidKey) {\r\n                    throw errorFactory.create(\"bad-vapid-key\" /* BAD_VAPID_KEY */);\r\n                }\r\n                if (!tokenDetails.endpoint || !tokenDetails.auth || !tokenDetails.p256dh) {\r\n                    throw errorFactory.create(\"bad-subscription\" /* BAD_SUBSCRIPTION */);\r\n                }\r\n                if (!tokenDetails.fcmSenderId) {\r\n                    throw errorFactory.create(\"bad-sender-id\" /* BAD_SENDER_ID */);\r\n                }\r\n                if (!tokenDetails.fcmToken) {\r\n                    throw errorFactory.create(\"bad-token\" /* BAD_TOKEN */);\r\n                }\r\n                if (!tokenDetails.fcmPushSet) {\r\n                    throw errorFactory.create(\"bad-push-set\" /* BAD_PUSH_SET */);\r\n                }\r\n                validateInputs(tokenDetails);\r\n                return [2 /*return*/, this.put(tokenDetails)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes details of the current FCM token.\r\n     * It's returning a promise in case we need to move to an async\r\n     * method for deleting at a later date.\r\n     *\r\n     * @return Resolves once the FCM token details have been deleted and returns\r\n     * the deleted details.\r\n     */\r\n    TokenDetailsModel.prototype.deleteToken = function (token) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof token !== 'string' || token.length === 0) {\r\n                            return [2 /*return*/, Promise.reject(errorFactory.create(\"invalid-delete-token\" /* INVALID_DELETE_TOKEN */))];\r\n                        }\r\n                        return [4 /*yield*/, this.getTokenDetailsFromToken(token)];\r\n                    case 1:\r\n                        details = _a.sent();\r\n                        if (!details) {\r\n                            throw errorFactory.create(\"delete-token-not-found\" /* DELETE_TOKEN_NOT_FOUND */);\r\n                        }\r\n                        return [4 /*yield*/, this.delete(details.swScope)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, details];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return TokenDetailsModel;\r\n}(DbInterface));\r\n/**\r\n * This method takes an object and will check for known arguments and\r\n * validate the input.\r\n * @return Promise that resolves if input is valid, rejects otherwise.\r\n */\r\nfunction validateInputs(input) {\r\n    if (input.fcmToken) {\r\n        if (typeof input.fcmToken !== 'string' || input.fcmToken.length === 0) {\r\n            throw errorFactory.create(\"bad-token\" /* BAD_TOKEN */);\r\n        }\r\n    }\r\n    if (input.swScope) {\r\n        if (typeof input.swScope !== 'string' || input.swScope.length === 0) {\r\n            throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n        }\r\n    }\r\n    if (input.vapidKey) {\r\n        if (!(input.vapidKey instanceof Uint8Array) ||\r\n            input.vapidKey.length !== 65) {\r\n            throw errorFactory.create(\"bad-vapid-key\" /* BAD_VAPID_KEY */);\r\n        }\r\n    }\r\n    if (input.endpoint) {\r\n        if (typeof input.endpoint !== 'string' || input.endpoint.length === 0) {\r\n            throw errorFactory.create(\"bad-subscription\" /* BAD_SUBSCRIPTION */);\r\n        }\r\n    }\r\n    if (input.auth) {\r\n        if (!(input.auth instanceof ArrayBuffer)) {\r\n            throw errorFactory.create(\"bad-subscription\" /* BAD_SUBSCRIPTION */);\r\n        }\r\n    }\r\n    if (input.p256dh) {\r\n        if (!(input.p256dh instanceof ArrayBuffer)) {\r\n            throw errorFactory.create(\"bad-subscription\" /* BAD_SUBSCRIPTION */);\r\n        }\r\n    }\r\n    if (input.fcmSenderId) {\r\n        if (typeof input.fcmSenderId !== 'string' ||\r\n            input.fcmSenderId.length === 0) {\r\n            throw errorFactory.create(\"bad-sender-id\" /* BAD_SENDER_ID */);\r\n        }\r\n    }\r\n    if (input.fcmPushSet) {\r\n        if (typeof input.fcmPushSet !== 'string' || input.fcmPushSet.length === 0) {\r\n            throw errorFactory.create(\"bad-push-set\" /* BAD_PUSH_SET */);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UNCOMPRESSED_PUBLIC_KEY_SIZE = 65;\r\nvar VapidDetailsModel = /** @class */ (function (_super) {\r\n    __extends(VapidDetailsModel, _super);\r\n    function VapidDetailsModel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.dbName = 'fcm_vapid_details_db';\r\n        _this.dbVersion = 1;\r\n        _this.objectStoreName = 'fcm_vapid_object_Store';\r\n        return _this;\r\n    }\r\n    VapidDetailsModel.prototype.onDbUpgrade = function (request) {\r\n        var db = request.result;\r\n        db.createObjectStore(this.objectStoreName, { keyPath: 'swScope' });\r\n    };\r\n    /**\r\n     * Given a service worker scope, this method will look up the vapid key\r\n     * in indexedDB.\r\n     */\r\n    VapidDetailsModel.prototype.getVapidFromSWScope = function (swScope) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof swScope !== 'string' || swScope.length === 0) {\r\n                            throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n                        }\r\n                        return [4 /*yield*/, this.get(swScope)];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result ? result.vapidKey : undefined];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Save a vapid key against a swScope for later date.\r\n     */\r\n    VapidDetailsModel.prototype.saveVapidDetails = function (swScope, vapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return __generator(this, function (_a) {\r\n                if (typeof swScope !== 'string' || swScope.length === 0) {\r\n                    throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n                }\r\n                if (vapidKey === null || vapidKey.length !== UNCOMPRESSED_PUBLIC_KEY_SIZE) {\r\n                    throw errorFactory.create(\"bad-vapid-key\" /* BAD_VAPID_KEY */);\r\n                }\r\n                details = {\r\n                    swScope: swScope,\r\n                    vapidKey: vapidKey\r\n                };\r\n                return [2 /*return*/, this.put(details)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes details of the current FCM VAPID key for a SW scope.\r\n     * Resolves once the scope/vapid details have been deleted and returns the\r\n     * deleted vapid key.\r\n     */\r\n    VapidDetailsModel.prototype.deleteVapidDetails = function (swScope) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var vapidKey;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getVapidFromSWScope(swScope)];\r\n                    case 1:\r\n                        vapidKey = _a.sent();\r\n                        if (!vapidKey) {\r\n                            throw errorFactory.create(\"delete-scope-not-found\" /* DELETE_SCOPE_NOT_FOUND */);\r\n                        }\r\n                        return [4 /*yield*/, this.delete(swScope)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, vapidKey];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return VapidDetailsModel;\r\n}(DbInterface));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SENDER_ID_OPTION_NAME = 'messagingSenderId';\r\n// Database cache should be invalidated once a week.\r\nvar TOKEN_EXPIRATION_MILLIS = 7 * 24 * 60 * 60 * 1000; // 7 days\r\nvar BaseController = /** @class */ (function () {\r\n    /**\r\n     * An interface of the Messaging Service API\r\n     */\r\n    function BaseController(app) {\r\n        var _this = this;\r\n        if (!app.options[SENDER_ID_OPTION_NAME] ||\r\n            typeof app.options[SENDER_ID_OPTION_NAME] !== 'string') {\r\n            throw errorFactory.create(\"bad-sender-id\" /* BAD_SENDER_ID */);\r\n        }\r\n        this.messagingSenderId = app.options[SENDER_ID_OPTION_NAME];\r\n        this.tokenDetailsModel = new TokenDetailsModel();\r\n        this.vapidDetailsModel = new VapidDetailsModel();\r\n        this.iidModel = new IidModel();\r\n        this.app = app;\r\n        this.INTERNAL = {\r\n            delete: function () { return _this.delete(); }\r\n        };\r\n    }\r\n    /**\r\n     * @export\r\n     */\r\n    BaseController.prototype.getToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var currentPermission, swReg, publicVapidKey, pushSubscription, tokenDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        currentPermission = this.getNotificationPermission_();\r\n                        if (currentPermission === 'denied') {\r\n                            throw errorFactory.create(\"notifications-blocked\" /* NOTIFICATIONS_BLOCKED */);\r\n                        }\r\n                        else if (currentPermission !== 'granted') {\r\n                            // We must wait for permission to be granted\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        swReg = _a.sent();\r\n                        return [4 /*yield*/, this.getPublicVapidKey_()];\r\n                    case 2:\r\n                        publicVapidKey = _a.sent();\r\n                        return [4 /*yield*/, this.getPushSubscription(swReg, publicVapidKey)];\r\n                    case 3:\r\n                        pushSubscription = _a.sent();\r\n                        return [4 /*yield*/, this.tokenDetailsModel.getTokenDetailsFromSWScope(swReg.scope)];\r\n                    case 4:\r\n                        tokenDetails = _a.sent();\r\n                        if (tokenDetails) {\r\n                            return [2 /*return*/, this.manageExistingToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\r\n                        }\r\n                        return [2 /*return*/, this.getNewToken(swReg, pushSubscription, publicVapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * manageExistingToken is triggered if there's an existing FCM token in the\r\n     * database and it can take 3 different actions:\r\n     * 1) Retrieve the existing FCM token from the database.\r\n     * 2) If VAPID details have changed: Delete the existing token and create a\r\n     * new one with the new VAPID key.\r\n     * 3) If the database cache is invalidated: Send a request to FCM to update\r\n     * the token, and to check if the token is still valid on FCM-side.\r\n     */\r\n    BaseController.prototype.manageExistingToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var isTokenValid, now;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        isTokenValid = isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails);\r\n                        if (isTokenValid) {\r\n                            now = Date.now();\r\n                            if (now < tokenDetails.createTime + TOKEN_EXPIRATION_MILLIS) {\r\n                                return [2 /*return*/, tokenDetails.fcmToken];\r\n                            }\r\n                            else {\r\n                                return [2 /*return*/, this.updateToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\r\n                            }\r\n                        }\r\n                        // If the token is no longer valid (for example if the VAPID details\r\n                        // have changed), delete the existing token from the FCM client and server\r\n                        // database. No need to unsubscribe from the Service Worker as we have a\r\n                        // good push subscription that we'd like to use in getNewToken.\r\n                        return [4 /*yield*/, this.deleteTokenFromDB(tokenDetails.fcmToken)];\r\n                    case 1:\r\n                        // If the token is no longer valid (for example if the VAPID details\r\n                        // have changed), delete the existing token from the FCM client and server\r\n                        // database. No need to unsubscribe from the Service Worker as we have a\r\n                        // good push subscription that we'd like to use in getNewToken.\r\n                        _a.sent();\r\n                        return [2 /*return*/, this.getNewToken(swReg, pushSubscription, publicVapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    BaseController.prototype.updateToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var updatedToken, allDetails, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 4, , 6]);\r\n                        return [4 /*yield*/, this.iidModel.updateToken(this.messagingSenderId, tokenDetails.fcmToken, tokenDetails.fcmPushSet, pushSubscription, publicVapidKey)];\r\n                    case 1:\r\n                        updatedToken = _a.sent();\r\n                        allDetails = {\r\n                            swScope: swReg.scope,\r\n                            vapidKey: publicVapidKey,\r\n                            fcmSenderId: this.messagingSenderId,\r\n                            fcmToken: updatedToken,\r\n                            fcmPushSet: tokenDetails.fcmPushSet,\r\n                            createTime: Date.now(),\r\n                            endpoint: pushSubscription.endpoint,\r\n                            auth: pushSubscription.getKey('auth'),\r\n                            p256dh: pushSubscription.getKey('p256dh')\r\n                        };\r\n                        return [4 /*yield*/, this.tokenDetailsModel.saveTokenDetails(allDetails)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, updatedToken];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        return [4 /*yield*/, this.deleteToken(tokenDetails.fcmToken)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        throw e_1;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    BaseController.prototype.getNewToken = function (swReg, pushSubscription, publicVapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tokenDetails, allDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.iidModel.getToken(this.messagingSenderId, pushSubscription, publicVapidKey)];\r\n                    case 1:\r\n                        tokenDetails = _a.sent();\r\n                        allDetails = {\r\n                            swScope: swReg.scope,\r\n                            vapidKey: publicVapidKey,\r\n                            fcmSenderId: this.messagingSenderId,\r\n                            fcmToken: tokenDetails.token,\r\n                            fcmPushSet: tokenDetails.pushSet,\r\n                            createTime: Date.now(),\r\n                            endpoint: pushSubscription.endpoint,\r\n                            auth: pushSubscription.getKey('auth'),\r\n                            p256dh: pushSubscription.getKey('p256dh')\r\n                        };\r\n                        return [4 /*yield*/, this.tokenDetailsModel.saveTokenDetails(allDetails)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, tokenDetails.token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes tokens that the token manager looks after,\r\n     * unsubscribes the token from FCM  and then unregisters the push\r\n     * subscription if it exists. It returns a promise that indicates\r\n     * whether or not the unsubscribe request was processed successfully.\r\n     */\r\n    BaseController.prototype.deleteToken = function (token) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var registration, pushSubscription;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: \r\n                    // Delete the token details from the database.\r\n                    return [4 /*yield*/, this.deleteTokenFromDB(token)];\r\n                    case 1:\r\n                        // Delete the token details from the database.\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 2:\r\n                        registration = _a.sent();\r\n                        if (!registration) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, registration.pushManager.getSubscription()];\r\n                    case 3:\r\n                        pushSubscription = _a.sent();\r\n                        if (pushSubscription) {\r\n                            return [2 /*return*/, pushSubscription.unsubscribe()];\r\n                        }\r\n                        _a.label = 4;\r\n                    case 4: \r\n                    // If there's no SW, consider it a success.\r\n                    return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method will delete the token from the client database, and make a\r\n     * call to FCM to remove it from the server DB. Does not temper with the\r\n     * push subscription.\r\n     */\r\n    BaseController.prototype.deleteTokenFromDB = function (token) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.tokenDetailsModel.deleteToken(token)];\r\n                    case 1:\r\n                        details = _a.sent();\r\n                        return [4 /*yield*/, this.iidModel.deleteToken(details.fcmSenderId, details.fcmToken, details.fcmPushSet)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a PushSubscription for the current user.\r\n     */\r\n    BaseController.prototype.getPushSubscription = function (swRegistration, publicVapidKey) {\r\n        return swRegistration.pushManager.getSubscription().then(function (subscription) {\r\n            if (subscription) {\r\n                return subscription;\r\n            }\r\n            return swRegistration.pushManager.subscribe({\r\n                userVisibleOnly: true,\r\n                applicationServerKey: publicVapidKey\r\n            });\r\n        });\r\n    };\r\n    //\r\n    // The following methods should only be available in the window.\r\n    //\r\n    /**\r\n     * @deprecated Use Notification.requestPermission() instead.\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\r\n     */\r\n    BaseController.prototype.requestPermission = function () {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    BaseController.prototype.useServiceWorker = function (_registration) {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    BaseController.prototype.usePublicVapidKey = function (_b64PublicKey) {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    BaseController.prototype.onMessage = function (_nextOrObserver, _error, _completed) {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    BaseController.prototype.onTokenRefresh = function (_nextOrObserver, _error, _completed) {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    //\r\n    // The following methods are used by the service worker only.\r\n    //\r\n    BaseController.prototype.setBackgroundMessageHandler = function (_callback) {\r\n        throw errorFactory.create(\"only-available-in-sw\" /* AVAILABLE_IN_SW */);\r\n    };\r\n    //\r\n    // The following methods are used by the service themselves and not exposed\r\n    // publicly or not expected to be used by developers.\r\n    //\r\n    /**\r\n     * This method is required to adhere to the Firebase interface.\r\n     * It closes any currently open indexdb database connections.\r\n     */\r\n    BaseController.prototype.delete = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.tokenDetailsModel.closeDatabase(),\r\n                            this.vapidDetailsModel.closeDatabase()\r\n                        ])];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns the current Notification Permission state.\r\n     */\r\n    BaseController.prototype.getNotificationPermission_ = function () {\r\n        return Notification.permission;\r\n    };\r\n    BaseController.prototype.getTokenDetailsModel = function () {\r\n        return this.tokenDetailsModel;\r\n    };\r\n    BaseController.prototype.getVapidDetailsModel = function () {\r\n        return this.vapidDetailsModel;\r\n    };\r\n    // Visible for testing\r\n    // TODO: make protected\r\n    BaseController.prototype.getIidModel = function () {\r\n        return this.iidModel;\r\n    };\r\n    return BaseController;\r\n}());\r\n/**\r\n * Checks if the tokenDetails match the details provided in the clients.\r\n */\r\nfunction isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails) {\r\n    if (!tokenDetails.vapidKey ||\r\n        !isArrayBufferEqual(publicVapidKey.buffer, tokenDetails.vapidKey.buffer)) {\r\n        return false;\r\n    }\r\n    var isEndpointEqual = pushSubscription.endpoint === tokenDetails.endpoint;\r\n    var isAuthEqual = isArrayBufferEqual(pushSubscription.getKey('auth'), tokenDetails.auth);\r\n    var isP256dhEqual = isArrayBufferEqual(pushSubscription.getKey('p256dh'), tokenDetails.p256dh);\r\n    return isEndpointEqual && isAuthEqual && isP256dhEqual;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FCM_MSG = 'FCM_MSG';\r\nvar SwController = /** @class */ (function (_super) {\r\n    __extends(SwController, _super);\r\n    function SwController(app) {\r\n        var _this = _super.call(this, app) || this;\r\n        _this.bgMessageHandler = null;\r\n        self.addEventListener('push', function (e) {\r\n            _this.onPush(e);\r\n        });\r\n        self.addEventListener('pushsubscriptionchange', function (e) {\r\n            _this.onSubChange(e);\r\n        });\r\n        self.addEventListener('notificationclick', function (e) {\r\n            _this.onNotificationClick(e);\r\n        });\r\n        return _this;\r\n    }\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.onPush = function (event) {\r\n        event.waitUntil(this.onPush_(event));\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.onSubChange = function (event) {\r\n        event.waitUntil(this.onSubChange_(event));\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.onNotificationClick = function (event) {\r\n        event.waitUntil(this.onNotificationClick_(event));\r\n    };\r\n    /**\r\n     * A handler for push events that shows notifications based on the content of\r\n     * the payload.\r\n     *\r\n     * The payload must be a JSON-encoded Object with a `notification` key. The\r\n     * value of the `notification` property will be used as the NotificationOptions\r\n     * object passed to showNotification. Additionally, the `title` property of the\r\n     * notification object will be used as the title.\r\n     *\r\n     * If there is no notification data in the payload then no notification will be\r\n     * shown.\r\n     */\r\n    SwController.prototype.onPush_ = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msgPayload, hasVisibleClients, notificationDetails, notificationTitle, reg, actions, maxActions;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!event.data) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        try {\r\n                            msgPayload = event.data.json();\r\n                        }\r\n                        catch (err) {\r\n                            // Not JSON so not an FCM message\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.hasVisibleClients_()];\r\n                    case 1:\r\n                        hasVisibleClients = _a.sent();\r\n                        if (hasVisibleClients) {\r\n                            // App in foreground. Send to page.\r\n                            return [2 /*return*/, this.sendMessageToWindowClients_(msgPayload)];\r\n                        }\r\n                        notificationDetails = this.getNotificationData_(msgPayload);\r\n                        if (!notificationDetails) return [3 /*break*/, 3];\r\n                        notificationTitle = notificationDetails.title || '';\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 2:\r\n                        reg = _a.sent();\r\n                        actions = notificationDetails.actions;\r\n                        maxActions = Notification.maxActions;\r\n                        // tslint:enable no-any\r\n                        if (actions && maxActions && actions.length > maxActions) {\r\n                            console.warn(\"This browser only supports \" + maxActions + \" actions.\" +\r\n                                \"The remaining actions will not be displayed.\");\r\n                        }\r\n                        return [2 /*return*/, reg.showNotification(notificationTitle, notificationDetails)];\r\n                    case 3:\r\n                        if (!this.bgMessageHandler) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.bgMessageHandler(msgPayload)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SwController.prototype.onSubChange_ = function (_event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var registration, err_1, err_2, tokenDetailsModel, tokenDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        registration = _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        err_1 = _a.sent();\r\n                        throw errorFactory.create(\"unable-to-resubscribe\" /* UNABLE_TO_RESUBSCRIBE */, {\r\n                            errorInfo: err_1\r\n                        });\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 8]);\r\n                        return [4 /*yield*/, registration.pushManager.getSubscription()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 5:\r\n                        err_2 = _a.sent();\r\n                        tokenDetailsModel = this.getTokenDetailsModel();\r\n                        return [4 /*yield*/, tokenDetailsModel.getTokenDetailsFromSWScope(registration.scope)];\r\n                    case 6:\r\n                        tokenDetails = _a.sent();\r\n                        if (!tokenDetails) {\r\n                            // This should rarely occure, but could if indexedDB\r\n                            // is corrupted or wiped\r\n                            throw err_2;\r\n                        }\r\n                        // Attempt to delete the token if we know it's bad\r\n                        return [4 /*yield*/, this.deleteToken(tokenDetails.fcmToken)];\r\n                    case 7:\r\n                        // Attempt to delete the token if we know it's bad\r\n                        _a.sent();\r\n                        throw err_2;\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SwController.prototype.onNotificationClick_ = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msgPayload, link, windowClient, internalMsg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!event.notification ||\r\n                            !event.notification.data ||\r\n                            !event.notification.data[FCM_MSG]) {\r\n                            // Not an FCM notification, do nothing.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (event.action) {\r\n                            // User clicked on an action button.\r\n                            // This will allow devs to act on action button clicks by using a custom\r\n                            // onNotificationClick listener that they define.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Prevent other listeners from receiving the event\r\n                        event.stopImmediatePropagation();\r\n                        event.notification.close();\r\n                        msgPayload = event.notification.data[FCM_MSG];\r\n                        if (!msgPayload.notification) {\r\n                            // Nothing to do.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        link = (msgPayload.fcmOptions && msgPayload.fcmOptions.link) ||\r\n                            msgPayload.notification.click_action;\r\n                        if (!link) {\r\n                            // Nothing to do.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.getWindowClient_(link)];\r\n                    case 1:\r\n                        windowClient = _a.sent();\r\n                        if (!!windowClient) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, self.clients.openWindow(link)];\r\n                    case 2:\r\n                        // Unable to find window client so need to open one.\r\n                        windowClient = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 3: return [4 /*yield*/, windowClient.focus()];\r\n                    case 4:\r\n                        windowClient = _a.sent();\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        if (!windowClient) {\r\n                            // Window Client will not be returned if it's for a third party origin.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Delete notification and fcmOptions data from payload before sending to\r\n                        // the page.\r\n                        delete msgPayload.notification;\r\n                        delete msgPayload.fcmOptions;\r\n                        internalMsg = createNewMsg(MessageType.NOTIFICATION_CLICKED, msgPayload);\r\n                        // Attempt to send a message to the client to handle the data\r\n                        // Is affected by: https://github.com/slightlyoff/ServiceWorker/issues/728\r\n                        return [2 /*return*/, this.attemptToMessageClient_(windowClient, internalMsg)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.getNotificationData_ = function (msgPayload) {\r\n        var _a;\r\n        if (!msgPayload) {\r\n            return;\r\n        }\r\n        if (typeof msgPayload.notification !== 'object') {\r\n            return;\r\n        }\r\n        var notificationInformation = __assign({}, msgPayload.notification);\r\n        // Put the message payload under FCM_MSG name so we can identify the\r\n        // notification as being an FCM notification vs a notification from\r\n        // somewhere else (i.e. normal web push or developer generated\r\n        // notification).\r\n        notificationInformation.data = __assign({}, msgPayload.notification.data, (_a = {}, _a[FCM_MSG] = msgPayload, _a));\r\n        return notificationInformation;\r\n    };\r\n    /**\r\n     * Calling setBackgroundMessageHandler will opt in to some specific\r\n     * behaviours.\r\n     * 1.) If a notification doesn't need to be shown due to a window already\r\n     * being visible, then push messages will be sent to the page.\r\n     * 2.) If a notification needs to be shown, and the message contains no\r\n     * notification data this method will be called\r\n     * and the promise it returns will be passed to event.waitUntil.\r\n     * If you do not set this callback then all push messages will let and the\r\n     * developer can handle them in a their own 'push' event callback\r\n     *\r\n     * @param callback The callback to be called when a push message is received\r\n     * and a notification must be shown. The callback will be given the data from\r\n     * the push message.\r\n     */\r\n    SwController.prototype.setBackgroundMessageHandler = function (callback) {\r\n        if (!callback || typeof callback !== 'function') {\r\n            throw errorFactory.create(\"bg-handler-function-expected\" /* BG_HANDLER_FUNCTION_EXPECTED */);\r\n        }\r\n        this.bgMessageHandler = callback;\r\n    };\r\n    /**\r\n     * @param url The URL to look for when focusing a client.\r\n     * @return Returns an existing window client or a newly opened WindowClient.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.getWindowClient_ = function (url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parsedURL, clientList, suitableClient, i, parsedClientUrl;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        parsedURL = new URL(url, self.location.href).href;\r\n                        return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        suitableClient = null;\r\n                        for (i = 0; i < clientList.length; i++) {\r\n                            parsedClientUrl = new URL(clientList[i].url, self.location.href)\r\n                                .href;\r\n                            if (parsedClientUrl === parsedURL) {\r\n                                suitableClient = clientList[i];\r\n                                break;\r\n                            }\r\n                        }\r\n                        return [2 /*return*/, suitableClient];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This message will attempt to send the message to a window client.\r\n     * @param client The WindowClient to send the message to.\r\n     * @param message The message to send to the client.\r\n     * @returns Returns a promise that resolves after sending the message. This\r\n     * does not guarantee that the message was successfully received.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.attemptToMessageClient_ = function (client, message) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                // NOTE: This returns a promise in case this API is abstracted later on to\r\n                // do additional work\r\n                if (!client) {\r\n                    throw errorFactory.create(\"no-window-client-to-msg\" /* NO_WINDOW_CLIENT_TO_MSG */);\r\n                }\r\n                client.postMessage(message);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @returns If there is currently a visible WindowClient, this method will\r\n     * resolve to true, otherwise false.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.hasVisibleClients_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var clientList;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        return [2 /*return*/, clientList.some(function (client) {\r\n                                return client.visibilityState === 'visible' &&\r\n                                    // Ignore chrome-extension clients as that matches the background pages\r\n                                    // of extensions, which are always considered visible.\r\n                                    !client.url.startsWith('chrome-extension://');\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param msgPayload The data from the push event that should be sent to all\r\n     * available pages.\r\n     * @returns Returns a promise that resolves once the message has been sent to\r\n     * all WindowClients.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.sendMessageToWindowClients_ = function (msgPayload) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var clientList, internalMsg;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        internalMsg = createNewMsg(MessageType.PUSH_MSG_RECEIVED, msgPayload);\r\n                        return [4 /*yield*/, Promise.all(clientList.map(function (client) {\r\n                                return _this.attemptToMessageClient_(client, internalMsg);\r\n                            }))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will register the default service worker and return the registration.\r\n     * @return he service worker registration to be used for the push service.\r\n     */\r\n    SwController.prototype.getSWRegistration_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, self.registration];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will return the default VAPID key or the uint8array version of the\r\n     * public VAPID key provided by the developer.\r\n     */\r\n    SwController.prototype.getPublicVapidKey_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var swReg, vapidKeyFromDatabase;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        swReg = _a.sent();\r\n                        if (!swReg) {\r\n                            throw errorFactory.create(\"sw-registration-expected\" /* SW_REGISTRATION_EXPECTED */);\r\n                        }\r\n                        return [4 /*yield*/, this.getVapidDetailsModel().getVapidFromSWScope(swReg.scope)];\r\n                    case 2:\r\n                        vapidKeyFromDatabase = _a.sent();\r\n                        if (vapidKeyFromDatabase == null) {\r\n                            return [2 /*return*/, DEFAULT_PUBLIC_VAPID_KEY];\r\n                        }\r\n                        return [2 /*return*/, vapidKeyFromDatabase];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SwController;\r\n}(BaseController));\r\nfunction getClientList() {\r\n    return self.clients.matchAll({\r\n        type: 'window',\r\n        includeUncontrolled: true\r\n        // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\r\n    });\r\n}\r\nfunction createNewMsg(msgType, msgData) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[MessageParameter.TYPE_OF_MSG] = msgType,\r\n        _a[MessageParameter.DATA] = msgData,\r\n        _a;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\r\nvar DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WindowController = /** @class */ (function (_super) {\r\n    __extends(WindowController, _super);\r\n    /**\r\n     * A service that provides a MessagingService instance.\r\n     */\r\n    function WindowController(app) {\r\n        var _this = _super.call(this, app) || this;\r\n        _this.registrationToUse = null;\r\n        _this.publicVapidKeyToUse = null;\r\n        _this.messageObserver = null;\r\n        // @ts-ignore: Unused variable error, this is not implemented yet.\r\n        _this.tokenRefreshObserver = null;\r\n        _this.onMessageInternal = createSubscribe(function (observer) {\r\n            _this.messageObserver = observer;\r\n        });\r\n        _this.onTokenRefreshInternal = createSubscribe(function (observer) {\r\n            _this.tokenRefreshObserver = observer;\r\n        });\r\n        _this.setupSWMessageListener_();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Request permission if it is not currently granted\r\n     *\r\n     * @return Resolves if the permission was granted, otherwise rejects\r\n     *\r\n     * @deprecated Use Notification.requestPermission() instead.\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\r\n     */\r\n    WindowController.prototype.requestPermission = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var permissionResult;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.getNotificationPermission_() === 'granted') {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, Notification.requestPermission()];\r\n                    case 1:\r\n                        permissionResult = _a.sent();\r\n                        if (permissionResult === 'granted') {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (permissionResult === 'denied') {\r\n                            throw errorFactory.create(\"permission-blocked\" /* PERMISSION_BLOCKED */);\r\n                        }\r\n                        else {\r\n                            throw errorFactory.create(\"permission-default\" /* PERMISSION_DEFAULT */);\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method allows a developer to override the default service worker and\r\n     * instead use a custom service worker.\r\n     *\r\n     * @param registration The service worker registration that should be used to\r\n     * receive the push messages.\r\n     */\r\n    WindowController.prototype.useServiceWorker = function (registration) {\r\n        if (!(registration instanceof ServiceWorkerRegistration)) {\r\n            throw errorFactory.create(\"sw-registration-expected\" /* SW_REGISTRATION_EXPECTED */);\r\n        }\r\n        if (this.registrationToUse != null) {\r\n            throw errorFactory.create(\"use-sw-before-get-token\" /* USE_SW_BEFORE_GET_TOKEN */);\r\n        }\r\n        this.registrationToUse = registration;\r\n    };\r\n    /**\r\n     * This method allows a developer to override the default vapid key\r\n     * and instead use a custom VAPID public key.\r\n     *\r\n     * @param publicKey A URL safe base64 encoded string.\r\n     */\r\n    WindowController.prototype.usePublicVapidKey = function (publicKey) {\r\n        if (typeof publicKey !== 'string') {\r\n            throw errorFactory.create(\"invalid-public-vapid-key\" /* INVALID_PUBLIC_VAPID_KEY */);\r\n        }\r\n        if (this.publicVapidKeyToUse != null) {\r\n            throw errorFactory.create(\"use-public-key-before-get-token\" /* USE_PUBLIC_KEY_BEFORE_GET_TOKEN */);\r\n        }\r\n        var parsedKey = base64ToArrayBuffer(publicKey);\r\n        if (parsedKey.length !== 65) {\r\n            throw errorFactory.create(\"public-vapid-key-decryption-failed\" /* PUBLIC_KEY_DECRYPTION_FAILED */);\r\n        }\r\n        this.publicVapidKeyToUse = parsedKey;\r\n    };\r\n    /**\r\n     * @export\r\n     * @param nextOrObserver An observer object or a function triggered on\r\n     * message.\r\n     * @param error A function triggered on message error.\r\n     * @param completed function triggered when the observer is removed.\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    WindowController.prototype.onMessage = function (nextOrObserver, error, completed) {\r\n        if (typeof nextOrObserver === 'function') {\r\n            return this.onMessageInternal(nextOrObserver, error, completed);\r\n        }\r\n        else {\r\n            return this.onMessageInternal(nextOrObserver);\r\n        }\r\n    };\r\n    /**\r\n     * @param nextOrObserver An observer object or a function triggered on token\r\n     * refresh.\r\n     * @param error A function triggered on token refresh error.\r\n     * @param completed function triggered when the observer is removed.\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    WindowController.prototype.onTokenRefresh = function (nextOrObserver, error, completed) {\r\n        if (typeof nextOrObserver === 'function') {\r\n            return this.onTokenRefreshInternal(nextOrObserver, error, completed);\r\n        }\r\n        else {\r\n            return this.onTokenRefreshInternal(nextOrObserver);\r\n        }\r\n    };\r\n    /**\r\n     * Given a registration, wait for the service worker it relates to\r\n     * become activer\r\n     * @param registration Registration to wait for service worker to become active\r\n     * @return Wait for service worker registration to become active\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    WindowController.prototype.waitForRegistrationToActivate_ = function (registration) {\r\n        var serviceWorker = registration.installing || registration.waiting || registration.active;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!serviceWorker) {\r\n                // This is a rare scenario but has occured in firefox\r\n                reject(errorFactory.create(\"no-sw-in-reg\" /* NO_SW_IN_REG */));\r\n                return;\r\n            }\r\n            // Because the Promise function is called on next tick there is a\r\n            // small chance that the worker became active or redundant already.\r\n            if (serviceWorker.state === 'activated') {\r\n                resolve(registration);\r\n                return;\r\n            }\r\n            if (serviceWorker.state === 'redundant') {\r\n                reject(errorFactory.create(\"sw-reg-redundant\" /* SW_REG_REDUNDANT */));\r\n                return;\r\n            }\r\n            var stateChangeListener = function () {\r\n                if (serviceWorker.state === 'activated') {\r\n                    resolve(registration);\r\n                }\r\n                else if (serviceWorker.state === 'redundant') {\r\n                    reject(errorFactory.create(\"sw-reg-redundant\" /* SW_REG_REDUNDANT */));\r\n                }\r\n                else {\r\n                    // Return early and wait to next state change\r\n                    return;\r\n                }\r\n                serviceWorker.removeEventListener('statechange', stateChangeListener);\r\n            };\r\n            serviceWorker.addEventListener('statechange', stateChangeListener);\r\n        });\r\n    };\r\n    /**\r\n     * This will register the default service worker and return the registration\r\n     * @return The service worker registration to be used for the push service.\r\n     */\r\n    WindowController.prototype.getSWRegistration_ = function () {\r\n        var _this = this;\r\n        if (this.registrationToUse) {\r\n            return this.waitForRegistrationToActivate_(this.registrationToUse);\r\n        }\r\n        // Make the registration null so we know useServiceWorker will not\r\n        // use a new service worker as registrationToUse is no longer undefined\r\n        this.registrationToUse = null;\r\n        return navigator.serviceWorker\r\n            .register(DEFAULT_SW_PATH, {\r\n            scope: DEFAULT_SW_SCOPE\r\n        })\r\n            .catch(function (err) {\r\n            throw errorFactory.create(\"failed-serviceworker-registration\" /* FAILED_DEFAULT_REGISTRATION */, {\r\n                browserErrorMessage: err.message\r\n            });\r\n        })\r\n            .then(function (registration) {\r\n            return _this.waitForRegistrationToActivate_(registration).then(function () {\r\n                _this.registrationToUse = registration;\r\n                // We update after activation due to an issue with Firefox v49 where\r\n                // a race condition occassionally causes the service worker to not\r\n                // install\r\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                registration.update();\r\n                return registration;\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will return the default VAPID key or the uint8array version of the public VAPID key\r\n     * provided by the developer.\r\n     */\r\n    WindowController.prototype.getPublicVapidKey_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (this.publicVapidKeyToUse) {\r\n                    return [2 /*return*/, this.publicVapidKeyToUse];\r\n                }\r\n                return [2 /*return*/, DEFAULT_PUBLIC_VAPID_KEY];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method will set up a message listener to handle\r\n     * events from the service worker that should trigger\r\n     * events in the page.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    WindowController.prototype.setupSWMessageListener_ = function () {\r\n        var _this = this;\r\n        navigator.serviceWorker.addEventListener('message', function (event) {\r\n            if (!event.data || !event.data[MessageParameter.TYPE_OF_MSG]) {\r\n                // Not a message from FCM\r\n                return;\r\n            }\r\n            var workerPageMessage = event.data;\r\n            switch (workerPageMessage[MessageParameter.TYPE_OF_MSG]) {\r\n                case MessageType.PUSH_MSG_RECEIVED:\r\n                case MessageType.NOTIFICATION_CLICKED:\r\n                    var pushMessage = workerPageMessage[MessageParameter.DATA];\r\n                    if (_this.messageObserver) {\r\n                        _this.messageObserver.next(pushMessage);\r\n                    }\r\n                    break;\r\n                default:\r\n                    // Noop.\r\n                    break;\r\n            }\r\n        }, false);\r\n    };\r\n    return WindowController;\r\n}(BaseController));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerMessaging(instance) {\r\n    var messagingName = 'messaging';\r\n    var factoryMethod = function (app) {\r\n        if (!isSupported()) {\r\n            throw errorFactory.create(\"unsupported-browser\" /* UNSUPPORTED_BROWSER */);\r\n        }\r\n        if (self && 'ServiceWorkerGlobalScope' in self) {\r\n            // Running in ServiceWorker context\r\n            return new SwController(app);\r\n        }\r\n        else {\r\n            // Assume we are in the window context.\r\n            return new WindowController(app);\r\n        }\r\n    };\r\n    var namespaceExports = {\r\n        isSupported: isSupported\r\n    };\r\n    instance.INTERNAL.registerService(messagingName, factoryMethod, namespaceExports);\r\n}\r\nregisterMessaging(firebase);\r\nfunction isSupported() {\r\n    if (self && 'ServiceWorkerGlobalScope' in self) {\r\n        // Running in ServiceWorker context\r\n        return isSWControllerSupported();\r\n    }\r\n    else {\r\n        // Assume we are in the window context.\r\n        return isWindowControllerSupported();\r\n    }\r\n}\r\n/**\r\n * Checks to see if the required APIs exist.\r\n */\r\nfunction isWindowControllerSupported() {\r\n    return (navigator.cookieEnabled &&\r\n        'serviceWorker' in navigator &&\r\n        'PushManager' in window &&\r\n        'Notification' in window &&\r\n        'fetch' in window &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\r\n/**\r\n * Checks to see if the required APIs exist within SW Context.\r\n */\r\nfunction isSWControllerSupported() {\r\n    return ('PushManager' in self &&\r\n        'Notification' in self &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\n\nexport { isSupported, registerMessaging };\n//# sourceMappingURL=index.esm.js.map\n"]},"metadata":{},"sourceType":"module"}